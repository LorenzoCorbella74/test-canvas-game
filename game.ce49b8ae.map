{"version":3,"sources":["src/brain.ts","src/helper.ts","src/entities/weapons.ts","src/entities/enemies.ts","src/entities/powerup.ts","src/controller.ts","src/entities/player.ts","src/config.ts","src/camera.ts","src/maps/dm1.ts","src/maps.ts","src/entities/bullet.ts","src/entities/particelle.ts","src/entities/blood.ts","src/entities/waypoints.ts","node_modules/easystarjs/src/instance.js","node_modules/easystarjs/src/node.js","node_modules/heap/lib/heap.js","node_modules/heap/index.js","node_modules/easystarjs/src/easystar.js","src/game.ts"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5iBA,IAAA,SAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,YAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AAEA,MAAM,CAAC,MAAP,GAAgB,YAAA;AACZ,MAAI,GAAG,GAAG,IAAI,IAAJ,EAAV;AACA,EAAA,GAAG,CAAC,cAAJ,CAAmB,GAAnB;AACH,CAHD;;AAKA,IAAA,IAAA;AAAA;AAAA,YAAA;AAgDI,WAAA,IAAA,GAAA;AAHA,SAAA,MAAA,GAAiB,KAAjB;AACA,SAAA,KAAA,GAAgB,KAAhB;AAGI,SAAK,MAAL,GAAwC,QAAQ,CAAC,cAAT,CAAwB,QAAxB,CAAxC;AACA,SAAK,MAAL,CAAY,MAAZ,GAAqB,GAArB,CAFJ,CAE8B;;AAC1B,SAAK,MAAL,CAAY,KAAZ,GAAqB,GAArB,CAHJ,CAG8B;;AAC1B,SAAK,GAAL,GAAqB,KAAK,MAAL,CAAY,UAAZ,CAAuB,IAAvB,CAArB;AACA,SAAK,MAAL,GAAqB,IAAI,QAAA,CAAA,MAAJ,EAArB,CALJ,CAKwC;;AACpC,SAAK,KAAL,GAAqB,IAAI,SAAA,CAAA,KAAJ,EAArB,CANJ,CAMyC;;AACrC,SAAK,MAAL,GAAqB,IAAI,QAAA,CAAA,aAAJ,EAArB;AACA,SAAK,MAAL,GAAqB,IAAI,QAAA,CAAA,MAAJ,EAArB;AACA,SAAK,OAAL,GAAqB,IAAI,YAAA,CAAA,cAAJ,CAAmB,IAAnB,CAArB;AACA,SAAK,UAAL,GAAqB,IAAI,MAAA,CAAA,GAAJ,EAArB;AACA,SAAK,UAAL,GAAqB,IAAI,YAAA,CAAA,UAAJ,EAArB;AACA,SAAK,OAAL,GAAqB,IAAI,SAAA,CAAA,OAAJ,EAArB;AACA,SAAK,SAAL,GAAqB,IAAI,WAAA,CAAA,SAAJ,EAArB;AACA,SAAK,KAAL,GAAqB,IAAI,OAAA,CAAA,KAAJ,EAArB;AACA,SAAK,KAAL,GAAqB,SAArB;AACH,GAhEL,CAkEI;;;AACA,EAAA,IAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,QAAV,EAAsC;AAAtC,QAAA,KAAA,GAAA,IAAA;;AAAU,QAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,QAAA,GAAA,YAAA;AAA4B;;AAClC,SAAK,CAAL,GAA2B,IAAI,QAAA,CAAA,MAAJ,EAA3B;AACA,SAAK,MAAL,CAAY,MAAZ,GAA2B,KAAK,CAAL,CAAO,aAAlC,CAFkC,CAEe;;AACjD,SAAK,MAAL,CAAY,KAAZ,GAA2B,KAAK,CAAL,CAAO,YAAlC,CAHkC,CAGc;;AAChD,SAAK,KAAL,GAA2B,MAA3B;AACA,SAAK,KAAL,GAA2B,IAA3B,CALkC,CAKI;;AACtC,SAAK,UAAL,GAA2B,CAA3B,CANkC,CAMI;;AACtC,SAAK,GAAL,GAA2B,CAA3B;AACA,SAAK,QAAL,GAA2B,CAA3B,CARkC,CAQI;;AACtC,SAAK,IAAL,GAA2B,KAA3B,CATkC,CASI;;AACtC,SAAK,YAAL,GAA2B,CAA3B,CAVkC,CAUI;;AACtC,SAAK,UAAL,GAA2B,KAAK,CAAL,CAAO,iBAAlC;AACA,SAAK,aAAL,GAA2B,KAAK,CAAL,CAAO,mBAAlC;AACA,SAAK,YAAL,GAA2B,KAAK,CAAL,CAAO,mBAAlC;AACA,SAAK,QAAL,GAA2B,QAA3B;AACA,SAAK,MAAL,CAAY,KAAZ,CAAkB,MAAlB,GAA2B,WAA3B;AACA,SAAK,UAAL,GAA2B,KAAK,CAAL,CAAO,WAAlC;AACA,SAAK,MAAL,GAA2B,EAA3B;AACA,SAAK,QAAL,GAA2B,EAA3B;AAEA,SAAK,WAAL,GAA0B,EAA1B;AACA,SAAK,mBAAL,GAA0B,CAA1B,CArBkC,CAwBlC;;AACA,QAAI,SAAS,GAAG,KAAK,CAAC,KAAK,YAAN,CAAL,CAAyB,IAAzB,CAA8B,IAA9B,EAAoC,GAApC,CAAwC,UAAC,CAAD,EAAG,CAAH,EAAI;AAAI,aAAA,CAAA;AAAC,KAAjD,CAAhB,CAzBkC,CA2BlC;;AACA,SAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB;AACA,SAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB;AACA,SAAK,MAAL,CAAY,IAAZ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,KAAK,CAAL,CAAO,YAA9B,EAA4C,KAAK,CAAL,CAAO,aAAnD,EAAkE,IAAlE;AACA,SAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB;AACA,SAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB;AACA,SAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB;AACA,SAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB;AACA,SAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB;AACA,SAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,EApCkC,CAsClC;;AACA,SAAK,IAAL,GAAY,KAAK,UAAL,CAAgB,0BAAhB,EAAZ,CAvCkC,CAyCjC;;AACA,SAAK,IAAL,CAAU,OAAV,CACC,GADD,CACK,UAAC,CAAD,EAAO,CAAP,EAAe;AAChB,MAAA,CAAC,CAAC,KAAF,GAAQ,CAAR;AACD,aAAO,CAAP;AAAU,KAHb,EAGgB;AAHhB,KAIC,OAJD,CAIS,UAAC,CAAD,EAAQ,KAAR,EAAoB;AAC1B,MAAA,KAAI,CAAC,OAAL,CAAa,MAAb,CAAoB,CAAC,CAAC,CAAtB,EAAyB,CAAC,CAAC,CAA3B,EAA8B,CAAC,CAAC,IAAhC,EAAsC,KAAtC;AACH,KANA,EA1CiC,CAkDjC;;AACA,SAAK,IAAL,CAAU,SAAV,CACC,GADD,CACK,UAAC,CAAD,EAAO,CAAP,EAAe;AAChB,MAAA,CAAC,CAAC,KAAF,GAAQ,CAAR;AACD,aAAO,CAAP;AAAU,KAHb,EAGgB;AAHhB,KAIC,OAJD,CAIS,UAAC,CAAD,EAAQ,KAAR,EAAoB;AAC1B,MAAA,KAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,CAAC,CAAC,CAAxB,EAA2B,CAAC,CAAC,CAA7B,EAAgC,KAAhC;AACH,KANA,EAnDiC,CA2DlC;;AACA,SAAK,MAAL,CAAY,YAAZ;AACA,SAAK,MAAL,CAAY,CAAZ,IAAgB,KAAK,MAArB,CA7DkC,CA+DlC;;AACA,IAAA,SAAS,CAAC,OAAV,CAAkB,UAAC,IAAD,EAAW,KAAX,EAAuB;AACrC,UAAI,CAAC,GAAG,KAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,KAAhB,CAAR;;AACA,UAAI,GAAG,GAAG,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB,CAAC,CAAC,CAApB,EAAsB,CAAC,CAAC,CAAxB,EAA2B,KAA3B,EAAkC,KAAI,CAAC,WAAL,CAAiB,KAAjB,CAAlC,CAAV,CAFqC,CAEiC;;;AACtE,MAAA,KAAI,CAAC,MAAL,CAAY,KAAI,CAAC,MAAL,CAAY,MAAxB,IAAgC,GAAhC;AACH,KAJD;AAMA,SAAK,SAAL,CAAe,YAAf;AAEA,SAAK,QAAL,GAAgB,IAAI,QAAQ,CAAC,EAAb,EAAhB;AACA,SAAK,QAAL,CAAc,OAAd,CAAsB,KAAK,UAAL,CAAgB,GAAtC,EAzEkC,CA0ElC;;AACA,SAAK,QAAL,CAAc,kBAAd,CAAiC,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C,EAAmD,EAAnD,EAAuD,EAAvD,EAA2D,EAA3D,EAA+D,EAA/D,EAAmE,EAAnE,EAAuE,EAAvE,CAAjC;AACA,SAAK,QAAL,CAAc,eAAd;AACA,SAAK,QAAL,CAAc,mBAAd;AAEA,IAAA,qBAAqB,CAAC,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAAD,CAArB;AACH,GAhFD;;AAkFA,EAAA,IAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,KAAZ,EAAwB;AACpB,QAAG,KAAK,QAAL,IAAgB,YAAnB,EAAgC;AAAI;AAChC,aAAQ,UAAO,KAAK,GAAC,CAAb,CAAR;AACH,KAFD,MAEO;AAAK;AACR,UAAG,KAAK,GAAC,IAAI,CAAC,KAAL,CAAW,KAAK,CAAL,CAAO,mBAAP,GAA2B,CAAtC,IAAyC,CAAlD,EAAoD;AAChD,eAAQ,OAAR;AACH,OAFD,MAEK;AACD,eAAQ,OAAR;AACH;AACJ;AACJ,GAVD;;AAYQ,EAAA,IAAA,CAAA,SAAA,CAAA,QAAA,GAAR,UAAiB,SAAjB,EAAiC;AAE7B,SAAK,MAAL,CAAY,KAAZ,CAAkB,MAAlB,GAAyB,WAAzB;AAEA,QAAI,EAAE,GAAG,SAAS,GAAG,KAAK,UAA1B;AACA,SAAK,GAAL,GAAW,IAAI,CAAC,KAAL,CAAW,OAAK,EAAhB,CAAX;;AAEA,QAAG,KAAK,KAAR,EAAc;AAAsC;AAChD,WAAK,QAAL,GAAgB,SAAS,GAAG,KAAK,aAAjC,CADU,CACsC;;AAChD,WAAK,KAAL,GAAa,KAAb,CAFU,CAEsC;AACnD,KAHD,MAGK;AAA+C;AAChD,UAAG,SAAS,IAAI,KAAK,QAArB,EAA8B;AAAkB;AAC5C,aAAK,IAAL,GAAY,IAAZ,CAD0B,CACkB;AAC/C;AACJ;;AACD,SAAK,YAAL,GAAoB,IAAI,CAAC,KAAL,CAAW,KAAK,QAAL,GAAgB,SAA3B,IAAsC,IAA1D,CAf6B,CAewC;;AAErE,QAAI,KAAK,KAAL,IAAc,MAAlB,EAA0B;AACtB;AACH;;AAED,QAAG,KAAK,WAAR,EAAoB;AAChB,WAAK,mBAAL,IAA2B,EAA3B;AACH;;AAED,QAAG,KAAK,mBAAL,GAA0B,IAA7B,EAAkC;AAC9B,WAAK,WAAL,GAAkB,EAAlB;AACA,WAAK,mBAAL,GAA2B,CAA3B;AACH;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,KAAL,CAAW,IAAX,CAAgB,MAApC,EAA4C,CAAC,EAA7C,EAAiD;AAC7C,UAAM,GAAG,GAAG,KAAK,KAAL,CAAW,IAAX,CAAgB,CAAhB,CAAZ;;AACA,UAAI,KAAK,MAAL,CAAY,KAAZ,IAAqB,KAAK,UAA1B,IAAwC,GAAG,CAAC,KAAJ,IAAa,KAAK,UAA9D,EAA0E;AACtE,aAAK,eAAL,CAAqB,IAArB;AACA;AACH;AACJ;;AAED,QAAG,CAAC,KAAK,MAAT,EAAgB;AACZ,WAAK,SAAL,CAAe,EAAf,EAAmB,SAAnB;AACA,WAAK,SAAL;AACH;;AAED,SAAK,UAAL,GAAkB,SAAlB;;AAEA,QAAI,CAAC,KAAK,IAAV,EAAgB;AACZ,MAAA,qBAAqB,CAAC,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAAD,CAArB;AACH,KAFD,MAEO;AACH,WAAK,eAAL,CAAqB,IAArB;AACA;AACH;AACJ,GAnDO;;AAqDR,EAAA,IAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,EAAV,EAAqB,SAArB,EAAqC;AACjC,SAAK,MAAL,CAAY,MAAZ,CAAmB,EAAnB,EAAuB,SAAvB;AACA,SAAK,KAAL,CAAW,MAAX,CAAkB,EAAlB,EAAsB,SAAtB;AACA,SAAK,MAAL,CAAY,MAAZ,CAAmB,EAAnB,EAAuB,SAAvB;AACA,SAAK,MAAL,CAAY,MAAZ,CAAmB,EAAnB,EAAuB,SAAvB;AACA,SAAK,OAAL,CAAa,MAAb,CAAoB,EAApB,EAAwB,SAAxB;AACA,SAAK,SAAL,CAAe,MAAf,CAAsB,EAAtB,EAA0B,SAA1B,EANiC,CAMQ;;AACzC,SAAK,UAAL,CAAgB,MAAhB,CAAuB,EAAvB,EAA2B,SAA3B;AACA,SAAK,KAAL,CAAW,MAAX,CAAkB,EAAlB,EAAsB,SAAtB,EARiC,CASjC;AACH,GAVD;;AAYA,EAAA,IAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACI,SAAK,GAAL,CAAS,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAK,MAAL,CAAY,KAArC,EAA4C,KAAK,MAAL,CAAY,MAAxD,EADJ,CACsE;;AAClE,SAAK,UAAL,CAAgB,MAAhB;AACA,SAAK,MAAL,CAAY,MAAZ;AACA,SAAK,KAAL,CAAW,MAAX;AACA,SAAK,MAAL,CAAY,MAAZ;AACA,SAAK,OAAL,CAAa,MAAb;AACA,SAAK,SAAL,CAAe,MAAf,GAPJ,CAOgC;;AAC5B,SAAK,UAAL,CAAgB,MAAhB;AACA,SAAK,KAAL,CAAW,MAAX,GATJ,CAUI;;AAEA,SAAK,SAAL,GAZJ,CAYwB;AACvB,GAbD;;AAeA,EAAA,IAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACI,QAAI,OAAJ,EAAa,OAAb;AACA,IAAA,OAAO,GAAG,IAAI,CAAC,KAAL,CAAW,KAAK,YAAL,GAAoB,EAA/B,CAAV;AACA,IAAA,OAAO,GAAG,IAAI,CAAC,KAAL,CAAW,KAAK,YAAL,GAAoB,EAA/B,CAAV;AACA,IAAA,OAAO,GAAG,OAAO,GAAG,EAAV,GAAe,MAAM,OAArB,GAA+B,OAAzC;AACA,IAAA,OAAO,GAAG,OAAO,GAAG,EAAV,GAAe,MAAM,OAArB,GAA+B,OAAzC;AACA,WAAW,OAAO,GAAA,GAAP,GAAW,OAAtB;AACH,GAPD;;AASQ,EAAA,IAAA,CAAA,SAAA,CAAA,SAAA,GAAR,YAAA;AACI,SAAK,GAAL,CAAS,SAAT,GAAqB,KAAK,CAAL,CAAO,cAA5B;AACA,SAAK,GAAL,CAAS,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAK,CAAL,CAAO,YAA/B,EAA6C,KAAK,CAAL,CAAO,SAApD;AACA,SAAK,GAAL,CAAS,SAAT,GAAqB,MAArB;AACA,SAAK,GAAL,CAAS,IAAT,GAAgB,mBAAhB;AACA,SAAK,GAAL,CAAS,SAAT,GAAqB,SAArB;AACA,SAAK,GAAL,CAAS,QAAT,CAAkB,KAAlB,EAAyB,CAAzB,EAA4B,KAAK,CAAL,CAAO,SAAP,GAAmB,CAA/C;AACA,SAAK,GAAL,CAAS,QAAT,CAAkB,KAAlB,EAAyB,EAAzB,EAA6B,KAAK,CAAL,CAAO,SAAP,GAAmB,CAAhD;AACA,SAAK,GAAL,CAAS,QAAT,CAAkB,QAAlB,EAA4B,GAA5B,EAAiC,KAAK,CAAL,CAAO,SAAP,GAAmB,CAApD;AACA,SAAK,GAAL,CAAS,QAAT,CAAkB,KAAK,MAAL,CAAY,aAAZ,CAA0B,IAA5C,EAAkD,GAAlD,EAAuD,KAAK,CAAL,CAAO,SAAP,GAAmB,CAA1E;AACA,SAAK,GAAL,CAAS,QAAT,CAAkB,OAAlB,EAA2B,GAA3B,EAAgC,KAAK,CAAL,CAAO,SAAP,GAAmB,CAAnD;AACA,SAAK,GAAL,CAAS,QAAT,CAAkB,MAAlB,EAA0B,GAA1B,EAA+B,KAAK,CAAL,CAAO,SAAP,GAAmB,CAAlD;;AACA,QAAI,KAAK,MAAL,CAAY,OAAhB,EAAyB;AACrB,WAAK,GAAL,CAAS,QAAT,CAAkB,KAAlB,EAAyB,GAAzB,EAA8B,KAAK,CAAL,CAAO,SAAP,GAAmB,CAAjD;AACH;;AACD,SAAK,GAAL,CAAS,IAAT,GAAgB,mBAAhB;AACA,SAAK,GAAL,CAAS,SAAT,GAAqB,QAArB;AACA,SAAK,GAAL,CAAS,QAAT,CAAkB,KAAK,MAAL,CAAY,EAAZ,CAAe,QAAf,EAAlB,EAA6C,EAA7C,EAAiD,KAAK,CAAL,CAAO,SAAP,GAAmB,CAApE;AACA,SAAK,GAAL,CAAS,QAAT,CAAkB,KAAK,MAAL,CAAY,EAAZ,CAAe,QAAf,EAAlB,EAA6C,GAA7C,EAAkD,KAAK,CAAL,CAAO,SAAP,GAAmB,CAArE;AACA,SAAK,GAAL,CAAS,QAAT,CAAkB,KAAK,MAAL,CAAY,KAAZ,CAAkB,QAAlB,EAAlB,EAAgD,GAAhD,EAAqD,KAAK,CAAL,CAAO,SAAP,GAAmB,CAAxE;AACA,SAAK,GAAL,CAAS,QAAT,CAAkB,KAAK,MAAL,CAAY,aAAZ,CAA0B,UAA1B,CAAqC,QAArC,EAAlB,EAAmE,GAAnE,EAAwE,KAAK,CAAL,CAAO,SAAP,GAAmB,CAA3F;AACA,SAAK,GAAL,CAAS,QAAT,CAAkB,KAAK,SAAL,EAAlB,EAAoC,GAApC,EAAyC,KAAK,CAAL,CAAO,SAAP,GAAmB,CAA5D;AACA,SAAK,GAAL,CAAS,QAAT,CAAkB,KAAK,GAAL,CAAS,QAAT,EAAlB,EAAuC,GAAvC,EAA4C,KAAK,CAAL,CAAO,SAAP,GAAmB,CAA/D,EAtBJ,CAwBI;;AACA,QAAI,CAAC,KAAK,MAAL,CAAY,KAAjB,EAAwB;AACpB,WAAK,GAAL,CAAS,SAAT,GAAqB,SAArB;AACA,WAAK,GAAL,CAAS,IAAT,GAAgB,mBAAhB;AACA,WAAK,GAAL,CAAS,SAAT,GAAqB,QAArB;AACA,WAAK,GAAL,CAAS,QAAT,CAAkB,gBAAc,IAAI,CAAC,IAAL,CAAU,CAAC,KAAK,CAAL,CAAO,iBAAP,GAA2B,KAAK,MAAL,CAAY,WAAxC,IAAuD,IAAjE,EAAuE,QAAvE,EAAhC,EAAqH,GAArH,EAA0H,GAA1H;AACH,KA9BL,CAgCI;;;AACA,QAAI,KAAK,WAAT,EAAsB;AAClB,WAAK,GAAL,CAAS,SAAT,GAAqB,SAArB;AACA,WAAK,GAAL,CAAS,IAAT,GAAgB,mBAAhB;AACA,WAAK,GAAL,CAAS,SAAT,GAAqB,QAArB;AACA,WAAK,GAAL,CAAS,QAAT,CAAkB,KAAK,WAAvB,EAAoC,GAApC,EAAyC,GAAzC;AACH;AACJ,GAvCO;;AAyCR,EAAA,IAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,OAAb,EAAsB,IAAtB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,IAAlC,EAAwC,KAAxC,EAA+C,KAA/C,EAAuD,QAAvD,EAAgE;AAC5D,IAAA,OAAO,CAAC,IAAR,GAAe,OAAO,IAAP,KAAgB,WAAhB,GAA8B,qBAA9B,GAAsD,IAArE;AACA,IAAA,OAAO,CAAC,SAAR,GAAoB,OAAO,KAAP,KAAiB,WAAjB,GAA+B,SAA/B,GAA2C,KAA/D;AACA,IAAA,OAAO,CAAC,SAAR,GAAoB,OAAO,KAAP,KAAiB,WAAjB,GAA+B,QAA/B,GAA0C,KAA9D;AACA,IAAA,OAAO,CAAC,YAAR,GAAuB,OAAO,QAAP,KAAoB,WAApB,GAAkC,QAAlC,GAA6C,QAApE;AACA,IAAA,OAAO,CAAC,QAAR,CAAiB,IAAjB,EAAuB,CAAvB,EAA0B,CAA1B;AACH,GAND;;AAQA,EAAA,IAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,IAAf,EAAwB;AAAxB,QAAA,KAAA,GAAA,IAAA;;AAEI,QAAI,QAAJ;AAEA,IAAA,IAAI,CAAC,MAAL,CAAY,gBAAZ,CAA6B,OAA7B,EAAsC,UAAC,CAAD,EAAM;AACxC,UAAM,IAAI,GAAG,KAAI,CAAC,MAAL,CAAY,qBAAZ,EAAb;;AACA,UAAM,GAAG,GAAG;AACV,QAAA,CAAC,EAAE,CAAC,CAAC,OAAF,GAAY,IAAI,CAAC,IADV;AAEV,QAAA,CAAC,EAAE,CAAC,CAAC,OAAF,GAAY,IAAI,CAAC;AAFV,OAAZ;;AAIA,UAAG,QAAQ,CAAC,QAAT,CAAkB,GAAG,CAAC,CAAtB,EAAwB,GAAG,CAAC,CAA5B,CAAH,EAAkC;AAC9B,QAAA,QAAQ,GAAC,YAAT;AACH;;AACD,UAAG,OAAO,CAAC,QAAR,CAAiB,GAAG,CAAC,CAArB,EAAuB,GAAG,CAAC,CAA3B,CAAH,EAAiC;AAC7B,QAAA,QAAQ,GAAE,MAAV;AACH;;AACD,UAAG,OAAO,CAAC,QAAR,CAAiB,GAAG,CAAC,CAArB,EAAuB,GAAG,CAAC,CAA3B,CAAH,EAAiC;AAC7B,QAAA,KAAI,CAAC,SAAL,CAAe,QAAf;AACH;AACJ,KAfD;AAiBA,IAAA,IAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,MAAlB,GAAyB,SAAzB;AACA,IAAA,IAAI,CAAC,KAAL,GAAa,YAAb;AACA,IAAA,IAAI,CAAC,OAAL,CAAa,SAAb,GAAyB,KAAzB;AACA,IAAA,IAAI,CAAC,GAAL,CAAS,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,IAAI,CAAC,MAAL,CAAY,KAArC,EAA4C,IAAI,CAAC,MAAL,CAAY,MAAxD;AACA,QAAI,EAAE,GAAG,IAAI,CAAC,MAAL,CAAY,KAAZ,GAAoB,GAA7B;AACA,QAAI,EAAE,GAAG,IAAI,CAAC,MAAL,CAAY,MAAZ,GAAqB,GAA9B;AACA,QAAI,IAAI,GAAG,aAAX;AACA,QAAI,MAAM,GAAG,aAAb;AACA,QAAI,KAAK,GAAG,aAAZ;AACA,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,kBAA5B,EAAgD,EAAhD,EAAoD,EAAE,GAAG,GAAzD,EAA8D,mBAAmB,IAAI,CAAC,UAAtF,EAAkG,KAAlG;AACA,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,+CAA5B,EAA6E,EAA7E,EAAiF,EAAE,GAAG,EAAtF,EAA0F,mBAAmB,IAAI,CAAC,UAAlH,EAA8H,MAA9H;AACA,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,oCAA5B,EAAkE,EAAlE,EAAsE,EAAE,GAAG,EAA3E,EAA+E,mBAAmB,IAAI,CAAC,UAAvG,EAAmH,MAAnH;AACA,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,4EAA5B,EAA0G,EAA1G,EAA8G,EAAE,GAAG,EAAnH,EAAuH,mBAAmB,IAAI,CAAC,UAA/I,EAA2J,MAA3J,EAjCoB,CAkCpB;;AAEA,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,mBAA5B,EAAiD,CAAjD,EAAoD,IAAI,CAAC,MAAL,CAAY,MAAZ,GAAqB,EAAzE,EAA6E,mBAAmB,IAAI,CAAC,UAArG,EAAiH,KAAjH,EAAwH,MAAxH;AAEA,QAAI,QAAQ,GAAG,IAAI,KAAJ,CAAU,GAAV,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,CAAf;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,IAAI,CAAC,GAAnB;AACA,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,YAA5B,EAA0C,GAA1C,EAA+C,GAA/C,EAAoD,mBAAmB,IAAI,CAAC,UAA5E,EAAwF,MAAxF;AAEA,QAAI,OAAO,GAAG,IAAI,KAAJ,CAAU,GAAV,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,CAAd;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,IAAI,CAAC,GAAlB;AACA,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,iBAA5B,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,mBAAmB,IAAI,CAAC,UAAjF,EAA6F,MAA7F;AACA,QAAI,OAAO,GAAG,IAAI,KAAJ,CAAU,GAAV,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,CAAd;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,IAAI,CAAC,GAAlB;AAEA,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,gBAA5B,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,mBAAmB,IAAI,CAAC,UAAhF,EAA4F,MAA5F;AACH,GAjDD;;AAmDA,EAAA,IAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,IAAhB,EAAyB;AACrB,IAAA,IAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,MAAlB,GAAyB,SAAzB;AACA,IAAA,IAAI,CAAC,KAAL,GAAa,aAAb;AACA,IAAA,IAAI,CAAC,OAAL,CAAa,SAAb,GAAyB,KAAzB;AACA,IAAA,IAAI,CAAC,GAAL,CAAS,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,IAAI,CAAC,MAAL,CAAY,KAArC,EAA4C,IAAI,CAAC,MAAL,CAAY,MAAxD;AACA,QAAI,EAAE,GAAG,IAAI,CAAC,MAAL,CAAY,KAAZ,GAAoB,GAA7B;AACA,QAAI,EAAE,GAAG,IAAI,CAAC,MAAL,CAAY,MAAZ,GAAqB,GAA9B;AACA,QAAI,IAAI,GAAG,aAAX;AACA,QAAI,MAAM,GAAG,aAAb;AACA,QAAI,KAAK,GAAG,aAAZ;AACA,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,kBAA5B,EAA+C,EAA/C,EAAmD,EAAE,GAAG,GAAxD,EAA6D,mBAAmB,IAAI,CAAC,UAArF,EAAiG,KAAjG;AACA,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,qBAA5B,EAAmD,EAAnD,EAAuD,EAAE,GAAG,EAA5D,EAAgE,mBAAmB,IAAI,CAAC,UAAxF,EAAoG,IAApG,EAXqB,CAYrB;AACA;AACA;AACA;AACA;;AACA,SAAK,MAAL,GAAc,KAAK,MAAL,CAAY,IAAZ,CAAiB,UAAC,IAAD,EAAO,IAAP,EAAW;AAAI,aAAA,IAAI,CAAC,KAAL,GAAa,IAAI,CAAC,KAAlB;AAAuB,KAAvD,CAAd;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,MAAL,CAAY,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AACzC,UAAM,KAAK,GAAG,KAAK,MAAL,CAAY,CAAZ,CAAd;AACA,WAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA+B,KAAK,CAAC,IAAN,GAAU,KAAV,GAAgB,KAAK,CAAC,KAAtB,GAA2B,KAA3B,GAAiC,KAAK,CAAC,cAAtE,EAAwF,EAAxF,EAA4F,EAAE,GAAG,EAAL,GAAU,MAAI,CAAC,GAAC,CAAN,CAAtG,EAAiH,mBAAmB,IAAI,CAAC,UAAzI,EAAqJ,MAArJ;AACH;;AACD,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,kBAA5B,EAAgD,EAAhD,EAAoD,IAAI,CAAC,MAAL,CAAY,MAAZ,GAAqB,GAAzE,EAA8E,mBAAmB,IAAI,CAAC,UAAtG,EAAkH,IAAlH;AACA,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,mBAA5B,EAAiD,CAAjD,EAAoD,IAAI,CAAC,MAAL,CAAY,MAAZ,GAAqB,EAAzE,EAA6E,mBAAmB,IAAI,CAAC,UAArG,EAAiH,KAAjH,EAAwH,MAAxH;AACH,GAxBD,CA9VJ,CAwXI;;;AACA,EAAA,IAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,IAAhB,EAAyB;AACrB,IAAA,IAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,MAAlB,GAAyB,SAAzB;AACA,IAAA,IAAI,CAAC,MAAL,GAAc,IAAd;AACA,IAAA,IAAI,CAAC,OAAL,CAAa,SAAb,GAAyB,KAAzB;AACA,IAAA,IAAI,CAAC,GAAL,CAAS,SAAT,GAAqB,uBAArB;AACA,IAAA,IAAI,CAAC,GAAL,CAAS,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,IAAI,CAAC,MAAL,CAAY,KAApC,EAA2C,IAAI,CAAC,MAAL,CAAY,MAAvD;AACA,QAAI,EAAE,GAAG,IAAI,CAAC,MAAL,CAAY,KAAZ,GAAoB,GAA7B;AACA,QAAI,EAAE,GAAG,IAAI,CAAC,MAAL,CAAY,MAAZ,GAAqB,GAA9B;AACA,QAAI,IAAI,GAAG,iBAAX;AACA,QAAI,MAAM,GAAG,iBAAb;AACA,QAAI,KAAK,GAAG,iBAAZ;AACA,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,QAA5B,EAAsC,EAAtC,EAA0C,EAAE,GAAG,EAA/C,EAAmD,mBAAmB,IAAI,CAAC,UAA3E,EAAuF,IAAvF,EAXqB,CAYrB;AACA;AACA;AACA;AACA;;AACA,SAAK,MAAL,GAAc,KAAK,MAAL,CAAY,IAAZ,CAAiB,UAAC,IAAD,EAAO,IAAP,EAAW;AAAI,aAAA,IAAI,CAAC,KAAL,GAAa,IAAI,CAAC,KAAlB;AAAuB,KAAvD,CAAd;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,MAAL,CAAY,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AACzC,UAAM,KAAK,GAAG,KAAK,MAAL,CAAY,CAAZ,CAAd;AACA,WAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA+B,KAAK,CAAC,IAAN,GAAU,KAAV,GAAgB,KAAK,CAAC,KAAtB,GAA2B,KAA3B,GAAiC,KAAK,CAAC,cAAtE,EAAwF,EAAxF,EAA4F,EAAE,GAAG,EAAL,GAAU,MAAI,CAAC,GAAC,CAAN,CAAtG,EAAiH,mBAAmB,IAAI,CAAC,UAAzI,EAAqJ,MAArJ;AACH;;AACD,SAAK,YAAL,CAAkB,IAAI,CAAC,GAAvB,EAA4B,mBAA5B,EAAiD,EAAjD,EAAqD,EAAE,GAAG,GAA1D,EAAkE,mBAAmB,IAAI,CAAC,UAA1F,EAAsG,IAAtG;AACH,GAvBD;;AAwBJ,SAAA,IAAA;AAjZA,CAAA,EAAA;;;;AAmZA,IAAA,KAAA;AAAA;AAAA,YAAA;AAQI,WAAA,KAAA,CAAY,CAAZ,EAAsB,CAAtB,EAAgC,CAAhC,EAA0C,CAA1C,EAAkD;AAC9C,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,KAAL,GAAa,CAAb;AACA,SAAK,MAAL,GAAc,CAAd;AACH;;AAED,EAAA,KAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,CAAT,EAAmB,CAAnB,EAA2B;AACvB,WAAO,KAAK,CAAL,IAAU,CAAV,IAAe,CAAC,IAAI,KAAK,CAAL,GAAS,KAAK,KAAlC,IACA,KAAK,CAAL,IAAU,CADV,IACe,CAAC,IAAI,KAAK,CAAL,GAAS,KAAK,MADzC;AAEH,GAHD;;AAKA,EAAA,KAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,GAAL,EAAY;AACR,IAAA,GAAG,CAAC,IAAJ,CAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,KAAK,KAA9B,EAAqC,KAAK,MAA1C;AACA,IAAA,GAAG,CAAC,MAAJ;AACH,GAHD;;AAIJ,SAAA,KAAA;AAxBA,CAAA,EAAA;;AAAa,OAAA,CAAA,KAAA,GAAA,KAAA","file":"game.ce49b8ae.map","sourceRoot":"..","sourcesContent":["export class BrainFSM {\r\n\r\n    private stack: any[] = [];\r\n    private time: number;\r\n    private justSetState: boolean;\r\n    private state: string;\r\n    private first: boolean;\r\n    private _currentStateFunction: Function;\r\n\r\n    get currentStateFunction() {\r\n        return this.getCurrentState();\r\n    }\r\n\r\n    constructor() { }\r\n\r\n    public update(who: any, dt: number): void {\r\n        if (this.currentStateFunction != null) {\r\n            this.first = this.justSetState;\r\n            this.time += this.first ? 0 : dt;\r\n            this.justSetState = false;\r\n            this.currentStateFunction(who, dt);\r\n        }\r\n    }\r\n    \r\n    public popState(): Function {\r\n        return this.stack.pop();\r\n    }\r\n    \r\n    public pushState(state: Function): void {\r\n        if (this.getCurrentState() != state) {\r\n            this.state = state.constructor.name;\r\n            this.time = 0;\r\n            this.justSetState = true;\r\n            this.stack.push(state);\r\n        }\r\n    }\r\n\r\n    public getCurrentState(): Function {\r\n        return this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\r\n    }\r\n\r\n\r\n    is(state: any) {\r\n        return this._currentStateFunction === state;\r\n    }\r\n\r\n    isIn(...states: any) {\r\n        return states.some(s => this.is(s));\r\n    }\r\n}","export class Helper {\r\n\r\n    static spawnUsed: number = 0;\r\n    static botsNameIndex: number = 0;\r\n\r\n    static getSpawnPoint(arr: any[]) {\r\n        let _spawn = this.spawnUsed;\r\n        if (_spawn == arr.length) {\r\n            _spawn= 0;\r\n            this.spawnUsed = 0;\r\n        } else {\r\n            this.spawnUsed++;\r\n        }\r\n        console.log(`Used spawn point n° ${this.spawnUsed}`);\r\n        return arr[_spawn]\r\n    }\r\n\r\n    static getBotsName(arr: any[]) {\r\n        let _spawn = this.botsNameIndex;\r\n        if (_spawn == arr.length) {\r\n            _spawn= 0;\r\n            this.botsNameIndex = 0;\r\n        } else {\r\n            this.botsNameIndex++;\r\n        }\r\n        return arr[_spawn]\r\n    }\r\n\r\n    static calculateAngle(cx: number, cy: number, ex: number, ey: number) {\r\n        let dy = ey - cy;\r\n        let dx = ex - cx;\r\n        let theta = Math.atan2(dy, dx); // range (-PI, PI]\r\n        // theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\r\n        // if (theta < 0) theta = 360 + theta; // range [0, 360)\r\n        //if (theta < 0) theta = Math.PI + theta; // range [0, 360)\r\n        return theta;\r\n    }\r\n\r\n    \r\n    static calculateDistance(obj1: any, obj2: any) {\r\n        let tx = obj1.x - obj2.x,\r\n        ty = obj1.y - obj2.y,\r\n        dist = Math.sqrt(tx * tx + ty * ty);\r\n        return dist;\r\n    }\r\n    \r\n    static randomElementInArray(items: any) {\r\n        return items[Math.floor(Math.random() * items.length)];\r\n    }\r\n\r\n    // Returns a random integer between min (include) and max (include)\r\n    static randBetween(min:number, max:number){\r\n        return  Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    static rand(min, max) {\r\n        return Math.floor(Helper.randf(min, max));\r\n      }\r\n      \r\n    static randf(min, max) {\r\n    if (max == null) {\r\n        max = min || 1;\r\n        min = 0;\r\n    }\r\n    return Math.random() * (max - min) + min;\r\n    }\r\n      \r\n      static randOneIn(max = 2) {\r\n        return Helper.rand(0, max) === 0;\r\n      }\r\n\r\n    static circleCollision(circle1: any, circle2: any) {\r\n        let x = circle1.x - circle2.x;\r\n        let y = circle1.y - circle2.y\r\n        let distance = Math.sqrt(x * x + y * y);\r\n        return (distance < circle1.r + circle2.r) ? true : false;\r\n    }\r\n\r\n\r\n    // https://yal.cc/rectangle-circle-intersection-test/\r\n    // https://gist.github.com/vonWolfehaus/5023015\r\n    static circleRectangleCollision(circle:any, rectangle:any){\r\n        // limits value to the range min..max\r\n        function clamp(val:number, min:number, max:number) {\r\n            return Math.max(min, Math.min(max, val))\r\n        }\r\n\r\n        // Find the closest point to the circle within the rectangle\r\n        // Assumes axis alignment! ie rect must not be rotated\r\n        var closestX = clamp(circle.x, rectangle.x, rectangle.x + rectangle.width);\r\n        var closestY = clamp(circle.y, rectangle.y, rectangle.y + rectangle.height);\r\n\r\n        // Calculate the distance between the circle's center and this closest point\r\n        var distanceX = circle.x - closestX;\r\n        var distanceY = circle.y - closestY;\r\n\r\n        // If the distance is less than the circle's radius, an intersection occurs\r\n        var distanceSquared = (distanceX * distanceX) + (distanceY * distanceY);\r\n        return distanceSquared < (circle.r * circle.r);\r\n    }\r\n\r\n    // https://www.emanueleferonato.com/2007/04/28/create-a-flash-artillery-game-step-1/\r\n    // https://www.safaribooksonline.com/library/view/html5-canvas/9781449308032/ch05s03.html\r\n\r\n    static getBotsPreferences(): string {\r\n        let preferences = [/* 'Rifle',  */'Shotgun', 'Plasma', 'Rocket', 'Railgun'];\r\n        let weights = [0.22, 0.24, 0.27, 0.26];\r\n        function generateWeighedList(list:string[], weights:number[]) {\r\n            let weighed_list = [];\r\n            // Loop over weights\r\n            for (let i = 0; i < weights.length; i++) {\r\n                let multiples = weights[i] * 100;\r\n                // Loop over the list of items\r\n                for (let j = 0; j < multiples; j++) {\r\n                    weighed_list.push(list[i]);\r\n                }\r\n            }\r\n            return weighed_list;\r\n        };\r\n        let weighed_list = generateWeighedList(preferences, weights);\r\n        let random_num = Helper.rand(0, weighed_list.length-1);\r\n        return weighed_list[random_num];\r\n    }\r\n\r\n    // NEW Line drawing on a grid\r\n\r\n    static dot(x1:number, y1:number, x2:number, y2:number) {\r\n        return x1 * x2 + y1 * y2;\r\n    }\r\n\r\n    static lerp(start, end, t) {\r\n        return start + t * (end-start);\r\n    }\r\n\r\n    static lerp_point(p0, p1, t) {\r\n        return { x: Helper.lerp(p0.x, p1.x, t), y: Helper.lerp(p0.y, p1.y, t) };\r\n    }\r\n\r\n    static diagonal_distance(p0, p1) {\r\n        var dx = p1.x - p0.x, dy = p1.y - p0.y;\r\n        return Math.max(Math.abs(dx), Math.abs(dy));\r\n    }\r\n    \r\n    static round_point(p) {\r\n        return {x: Math.round(p.x), y: Math.round(p.y)};\r\n    }\r\n    \r\n    static line(p0, p1) {\r\n        var points = [];\r\n        var N = Helper.diagonal_distance(p0, p1);\r\n        for (var step = 0; step <= N; step++) {\r\n            var t = N == 0? 0.0 : step / N;\r\n            points.push(Helper.round_point(Helper.lerp_point(p0, p1, t)));\r\n        }\r\n        return points;\r\n    }\r\n\r\n}   ","export class WeaponsInventory {\r\n\r\n    weapon: number;\r\n    selectedWeapon: any;\r\n    weapons: any[] = [\r\n        {\r\n            name: 'Rifle',\r\n            frequency: 200,\r\n            count: 1,\r\n            speed: 9,\r\n            r: 2,\r\n            color: 'black',\r\n            ttl: 1000,\r\n            explode: 0,\r\n            spread: 0.1,\r\n            damage: 5,\r\n            // destroy: false,\r\n            available: true,\r\n            shotNumber: 100      // numero di colpi iniziale\r\n        }, {\r\n            name: 'Shotgun',\r\n            frequency: 800,     // // 200 è la frequenza di sparo = 5 colpi al sec\r\n            count: 6,           // NUMERO DI PARTICELLE PER OGNI COLPO\r\n            speed: 9,           // VELOCITA'\r\n            r: 2,\r\n            color: '#800000',\r\n            ttl: 1000,            // VITA (DURATA DEL COLPO)\r\n            explode: 0,         // SE CREA UNA ESPLOSIONE\r\n            spread: 0.5,        // QUANTO SI ALLARGA\r\n            damage: 10,          // DANNO INFLITTO\r\n            // destroy: false,     // SE DISTRUGGE\r\n            available: false,    // SE L'ARMA E' DISPONIBILE\r\n            shotNumber: 0 // 60      // numero di colpi\r\n        }, {\r\n            name: 'Flamer',\r\n            frequency: 25,\r\n            count: 1,\r\n            speed: 6,\r\n            r: 4,\r\n            color: '#FFA500',\r\n            ttl: 500,\r\n            explode: 0,\r\n            spread: 1.5,\r\n            damage: 1,\r\n            //destroy: false,\r\n            available: true,\r\n            shotNumber: Infinity\r\n        }, {\r\n            name: 'Plasma',\r\n            frequency: 150,\r\n            count: 1,\r\n            speed: 10,\r\n            r: 3,\r\n            color: 'blue',\r\n            ttl: 1400,\r\n            explode: 0,\r\n            spread: 0.01,\r\n            damage: 3,\r\n            // destroy: false,\r\n            available: false,\r\n            shotNumber: 0 // 80   \r\n        }, {\r\n            name: 'Rocket',\r\n            frequency: 1000,\r\n            count: 1,\r\n            speed: 8,\r\n            r: 4,\r\n            color: 'red',\r\n            ttl: 1500,\r\n            explode: 1,\r\n            spread: 0.01,\r\n            damage: 65,\r\n            //destroy: true,\r\n            available: false,\r\n            shotNumber: 0// 10      \r\n        }, {\r\n            name: 'Railgun',\r\n            frequency: 2000,\r\n            count: 1,\r\n            speed: 16,\r\n            r: 3,\r\n            color: 'green',\r\n            ttl: 1500,\r\n            explode: 0,\r\n            spread: 0.01,\r\n            damage: 110,\r\n            //destroy: false,\r\n            available: false,\r\n            shotNumber: 0 // 100\r\n        }];\r\n\r\n    constructor() {\r\n        this.weapon = 0;\r\n        this.selectedWeapon = this.weapons[this.weapon];\r\n    }\r\n\r\n    setWeapon(index: number) {\r\n        this.selectedWeapon = this.weapons[index];\r\n    }\r\n\r\n    // ora si prende l'arma + \"in alto\"\r\n    // TODO: si prende in base a probabilità pesata delle preferenze del bot e alla disponibilità\r\n    getBest() {\r\n        for (let i = this.weapons.length - 1; i >= 0; i--) {\r\n            let item = this.weapons[i];\r\n            if (item && item.available && item.shotNumber > 0) {\r\n                this.selectedWeapon = this.weapons[i];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // dopo un respawn le munizioni vengono azzerate \r\n    // e rimossa la disponibilità delle armi\r\n    resetWeapons() {\r\n        for (let i = this.weapons.length - 1; i >= 0; i--) {\r\n            let item = this.weapons[i];\r\n            item.shotNumber = 0;\r\n            item.available = false;\r\n        }\r\n        this.weapons[0].shotNumber = 100;\r\n        this.weapons[0].available = true;\r\n    }\r\n\r\n    // quando si colleziona un'arma e una cassa di munizioni\r\n    setAvailabilityAndNumOfBullets(name: string, numOfBullet: number) {\r\n        for (let i = this.weapons.length - 1; i >= 0; i--) {\r\n            let item = this.weapons[i];\r\n            if (item.name == name) {\r\n                item.shotNumber += numOfBullet;\r\n                item.available = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    setNumOfBullets(name: string, numOfBullet: number) {\r\n        for (let i = this.weapons.length - 1; i >= 0; i--) {\r\n            let item = this.weapons[i];\r\n            if (item.name == name) {\r\n                item.shotNumber += numOfBullet;\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { BrainFSM } from '../brain';\r\nimport { Helper } from '../helper'\r\nimport { WeaponsInventory } from './weapons';\r\n\r\n\r\nexport class Enemy {\r\n\r\n    // entities\r\n    canvas: any;\r\n    ctx:    any;\r\n    camera: any;\r\n    main:   any;\r\n    c:      any;\r\n    player: any;\r\n    map:    any\r\n    bullet: any;\r\n\r\n    list:   any;\r\n\r\n    constructor() { }\r\n\r\n    init(main: any) {\r\n        this.list = [];\r\n        this.main = main;\r\n        this.c = main.c;\r\n        this.player = main.player;\r\n        this.canvas = main.canvas;\r\n        this.camera = main.camera;\r\n        this.map = main.currentMap;\r\n        this.bullet = main.bullet;\r\n        this.ctx = main.ctx;\r\n    }\r\n\r\n    create(x: number, y: number, num: number, team:string) {\r\n        let bot: any = new Object();\r\n        bot.brain = new BrainFSM();\r\n        bot.index = num;\r\n        bot.name = Helper.getBotsName(this.c.ENEMY_NAMES);\r\n        bot.x = x || 75;\r\n        bot.y = y || 50;\r\n        bot.r = this.c.ENEMY_RADIUS;\r\n        bot.old_x = x;\r\n        bot.old_y = y;\r\n        bot.velX = 0;\r\n        bot.velY = 0;\r\n        bot.alive = true;\r\n        bot.speed = this.c.ENEMY_SPEED;\r\n        bot.angleWithTarget = 0;\r\n        bot.hp = this.c.ENEMY_HP;\r\n        bot.ap = this.c.ENEMY_AP;\r\n        bot.team = team;\r\n        // bot.preferences= Helper.getBotsPreferences();\r\n\r\n        bot.damage = 1;\t\t// è per il moltiplicatore del danno (quad = 4)\r\n        bot.kills = 0;\r\n        bot.numberOfDeaths = 0;\r\n        bot.target = {};\r\n        bot.aggression = Math.random() * 1 / 3 + 2 / 3;\r\n        bot.targetItem = {};\r\n        bot.trails = [];\r\n        this.list[this.list.length] = bot;\r\n        bot.brain.pushState(this.spawn.bind(this));\r\n\r\n        bot.weaponsInventory = new WeaponsInventory();\r\n        bot.currentWeapon = bot.weaponsInventory.selectedWeapon;\t\t// arma corrente\r\n        bot.attackCounter = 0;\r\n\r\n        bot.path = [];\r\n        return bot;\r\n    };\r\n\r\n    respawn(bot: any) {\r\n        const spawn = Helper.getSpawnPoint(this.main.data.spawn);\r\n        console.log(`BOT ${bot.index} is swawning at ${spawn.x} - ${spawn.y}`);\r\n        bot.x = spawn.x;\r\n        bot.y = spawn.y;\r\n        bot.old_x = spawn.x;\r\n        bot.old_y = spawn.y;\r\n        bot.r = this.c.ENEMY_RADIUS;\r\n        bot.velX = 0;\r\n        bot.velY = 0;\r\n        bot.speed = this.c.ENEMY_SPEED;\t// è uguale in tutte le direzioni\r\n        bot.damage = 1;\t\t\t\t\t// è il moltiplicatore del danno (quad = 4)\r\n        bot.angleWithTarget = 0;\t\t// angolo tra asse x e precedente target\r\n        bot.hp = this.c.PLAYER_HP;\t\t// punti vita\r\n        bot.ap = this.c.PLAYER_AP;\t\t// punti armatura\r\n        bot.alive = true;\t\t\t    // il bot è nuovamente presente in gioco\r\n        // this.kills = 0;\t\t\t\t// si mantengono...\r\n        // this.numberOfDeaths = 0;\t    // si mantengono...\r\n        bot.target = {};\r\n        bot.targetItem = {};\r\n        bot.trails = [];\r\n\r\n        \r\n        let amplitude = 100;\r\n        setTimeout(() => {\t\r\n            for (let i = 0; i < 100; i++) {\r\n                let beta = this.main.lastRender + i*20 + + Math.PI / 2;\r\n                let respawnParticles: any = {};\r\n                respawnParticles.x = bot.x  + Math.cos(beta) * Helper.randBetween(0,amplitude);\r\n                respawnParticles.y = bot.y  + Math.sin(beta) * Helper.randBetween(0,amplitude);\r\n                this.main.particelle.create(respawnParticles.x, respawnParticles.y , 0.5,0.5, 6, Helper.randomElementInArray(bot.team !='team1'? this.c.ENEMY_RESPAWN   :this.c.PLAYER_RESPAWN));\r\n            }\t\t\r\n    }, 150);\r\n\r\n        //  WEAPONS\r\n        bot.attackCounter = 0;\r\n        bot.weaponsInventory.resetWeapons();                    \t// munizioni e disponibilità default\r\n        bot.weaponsInventory.setWeapon(0);\t\t\t\t\t\t\t// arma default\r\n        bot.currentWeapon = bot.weaponsInventory.selectedWeapon;\t// arma corrente\r\n\r\n        bot.path = [];                                               // PATHFINDING\r\n\r\n        bot.brain.pushState(this.spawn.bind(this));                  // AI\r\n    }\r\n\r\n    private getBotColour(bot: any) {\r\n        if (bot.speed > 5/16) {\r\n            return 'yellow';\r\n        }\r\n        if (bot.damage > 1) {\r\n            return 'violet';\r\n        }\r\n        return bot.team !='team1'? this.c.ENEMY_COLOUR_INSIDE:this.c.PLAYER_COLOUR_INSIDE;\r\n    }\r\n\r\n    render() {\r\n        for (let i = this.list.length - 1; i >= 0; i--) {\r\n            const bot = this.list[i];\r\n            if (bot.alive) {\r\n\r\n                var pointerLength = this.c.ENEMY_RADIUS;\r\n                let intersX =bot.x - this.camera.x + pointerLength * Math.cos(bot.angleWithTarget);\r\n                let intersY =bot.y - this.camera.y + pointerLength * Math.sin(bot.angleWithTarget);\r\n                // trails\r\n                for (let i = 0; i < bot.trails.length; i++) {\r\n                    let ratio = (i + 1) / bot.trails.length;\r\n                    this.ctx.beginPath();\r\n                    this.ctx.arc(bot.trails[i].x - this.camera.x, bot.trails[i].y - this.camera.y, ratio * bot.r * (3 / 5) + bot.r * (2 / 5), 0, 2 * Math.PI, true);\r\n                    this.ctx.fillStyle = this.ctx.fillStyle = `rgb(127, 134, 135,${ratio / 2})`;\r\n                    this.ctx.fill();\r\n                }\r\n\r\n                // draw the WEAPON !!\r\n                this.ctx.beginPath();\r\n                this.ctx.arc(intersX, intersY, 4, 0, 2 * Math.PI, true);\r\n                this.ctx.fillStyle = bot.currentWeapon.color;\r\n                this.ctx.fill();\r\n\r\n                // draw the colored region\r\n                this.ctx.beginPath();\r\n                this.ctx.arc(bot.x - this.camera.x, bot.y - this.camera.y, bot.r, 0, 2 * Math.PI, true);\r\n                this.ctx.fillStyle = this.getBotColour(bot);\r\n                this.ctx.fill();\r\n\r\n                // draw the stroke\r\n                this.ctx.lineWidth = 2;\r\n                this.ctx.strokeStyle = bot.team !='team1'? this.c.ENEMY_COLOUR_OUTSIDE:this.c.PLAYER_COLOUR_OUTSIDE;\r\n                this.ctx.stroke();\r\n\r\n                // beccuccio arma\r\n                this.ctx.strokeStyle = bot.team !='team1'? this.c.ENEMY_COLOUR_OUTSIDE: this.c.PLAYER_COLOUR_OUTSIDE;\r\n                this.ctx.beginPath();\r\n                this.ctx.moveTo(bot.x - this.camera.x, bot.y - this.camera.y);\r\n                this.ctx.lineTo(intersX,intersY);\r\n                this.ctx.stroke();\r\n\r\n                if (this.main.debug) {\r\n                    this.ctx.font = 'bold 8px/1 Arial';\r\n                    this.ctx.fillStyle = 'white';\r\n                    this.ctx.fillText(bot.hp.toString(), bot.x - this.camera.x - 5, bot.y - this.camera.y);\r\n                    this.ctx.fillStyle = 'black';\r\n                    this.ctx.fillText(bot.index.toString(), bot.x - this.camera.x - 25, bot.y - this.camera.y - 16);\r\n                    this.ctx.fillText(bot.target && bot.target.index ? bot.target.index.toString() : '', bot.x - this.camera.x + 6, bot.y - this.camera.y + 20);\r\n                    this.ctx.fillText(bot.target && bot.target.dist ? bot.target.dist.toString() : '', bot.x - this.camera.x + 22, bot.y - this.camera.y + 36);\r\n                    this.ctx.fillText(bot && bot.aggression ? bot.aggression.toFixed(2).toString() : '', bot.x - this.camera.x + 22, bot.y - this.camera.y + 20);\r\n                    this.ctx.fillText(bot.targetItem && bot.targetItem.index ? bot.targetItem.index.toString() : '', bot.x - this.camera.x + 10, bot.y - this.camera.y - 20);\r\n                    this.ctx.fillText(bot.status, bot.x - this.camera.x - 25, bot.y - this.camera.y + 20);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getRandomDirection(bot: any) {\r\n        return Helper.randomElementInArray([bot.velX, -bot.velY, bot.velY, -bot.velX]);\r\n    }\r\n\r\n    isLavaOrToxic(bot: any, x: number, y: number): void {\r\n        let fy = Math.floor(y / this.c.TILE_SIZE);\r\n        let fx = Math.floor(x / this.c.TILE_SIZE);\r\n        let cy = Math.ceil(y / this.c.TILE_SIZE);\r\n        let cx = Math.ceil(x / this.c.TILE_SIZE);\r\n        if (/* fx || fy|| cy|| cx */\r\n             this.map.map[fy][fx] == 3\r\n            || this.map.map[fy][cx] == 3\r\n            || this.map.map[cy][fx] == 3\r\n            || this.map.map[cy][cx] == 3\r\n            || this.map.map[fy][fx] == 4\r\n            || this.map.map[fy][cx] == 4\r\n            || this.map.map[cy][fx] == 4\r\n            || this.map.map[cy][cx] == 4\r\n        ) {\r\n            bot.hp -= 0.5;\r\n            for (var j = 0; j < 24; j++) {\r\n                this.main.particelle.create(bot.x + Helper.randBetween(-bot.r, bot.r), bot.y + Helper.randBetween(-bot.r, bot.r), Math.random() * 2 - 2, Math.random() * 2 - 2, 2, Helper.randomElementInArray(this.c.FIRE_IN_LAVA))\r\n            }\r\n            if (bot.hp <= 0) {\r\n                bot.alive = false;\r\n                bot.numberOfDeaths++;\r\n                for (let b = 0; b < 36; b++) {\r\n                    this.main.blood.create(bot.x, bot.y, Math.random() * 2 - 2, Math.random() * 2 - 2, this.c.BLOOD_RADIUS) // crea il sangue\r\n                }\r\n                console.log(`Bot killed by lava.`);\r\n                setTimeout(() => {\r\n                    this.respawn(bot);\r\n                }, this.c.GAME_RESPAWN_TIME);\r\n            }\r\n        }\r\n    }\r\n\r\n    storePosForTrail(bot: any) {\r\n        // push an item\r\n        bot.trails.push({ x: bot.x, y: bot.y });\r\n        //get rid of first item\r\n        if (bot.trails.length > this.c.MOTION_TRAILS_LENGTH) {\r\n            bot.trails.shift();\r\n        }\r\n    }\r\n\r\n    checkCollision(bot: any) {\r\n        // collisione con i muri\r\n        if (bot.x - bot.old_x > 0 && this.main.currentMap.map[Math.floor(bot.y / this.c.TILE_SIZE)][Math.floor((bot.x + bot.r) / this.c.TILE_SIZE)] == 1) {\r\n            bot.x = bot.old_x;\r\n        }\r\n        if (bot.x - bot.old_x < 0 && this.main.currentMap.map[Math.floor(bot.y / this.c.TILE_SIZE)][Math.floor((bot.x - bot.r) / this.c.TILE_SIZE)] == 1) {\r\n            bot.x = bot.old_x;\r\n        }\r\n        if (bot.y - bot.old_y > 0 && this.main.currentMap.map[Math.floor((bot.y + bot.r) / this.c.TILE_SIZE)][Math.floor(bot.x / this.c.TILE_SIZE)] == 1) {\r\n            bot.y = bot.old_y;\r\n        }\r\n        if (bot.y - bot.old_y < 0 && this.main.currentMap.map[Math.floor((bot.y - bot.r) / this.c.TILE_SIZE)][Math.floor(bot.x / this.c.TILE_SIZE)] == 1) {\r\n            bot.y = bot.old_y;\r\n        }\r\n        // Collisione con il target\r\n        /* if (bot.target && Helper.circleCollision(bot, bot.target)) {\r\n            bot.y += bot.old_y;\r\n            bot.x += bot.old_x;\r\n        } */\r\n        this.storePosForTrail(bot)\r\n    }\r\n\r\n\r\n    // SOURCE: https://www.redblobgames.com/grids/line-drawing.html\r\n    checkIfIsSeen2(p0: any, p1: any) {\r\n        let points = Helper.line(p0,p1);\r\n        let output = true;\r\n        for (let i = 0; i < points.length; i += 3) {  // STEP DI 2 PER RIDURRE I CICLI...\r\n            const ele = points[i];\r\n            if (this.map.map[Math.floor(ele.y / this.c.TILE_SIZE)][Math.floor(ele.x / this.c.TILE_SIZE)] == 1) {\r\n                output = false;\r\n                break;\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /* -------------------------------------------------------------------------------------- */\r\n\r\n    update(dt: number, timestamp:number) {\r\n        for (let i = this.list.length - 1; i >= 0; i--) {\r\n            const bot = this.list[i];\r\n            if (bot.alive) {\r\n                bot.brain.update(bot, dt);\r\n                this.isLavaOrToxic(bot, bot.x, bot.y);\r\n                this.checkCollision(bot);\r\n            }\r\n        }\r\n    }\r\n\r\n    spawn(bot: any, dt: number) {\r\n        bot.status = 'spawn';\r\n        let opponentData = this.getNearestVisibleEnemy(bot, this.main.actors);\r\n        // const power_best = this.getNearestPowerup(bot, this.main.powerup.list);\r\n        // const waypoint_best = this.getNearestWaypoint(bot, this.main.waypoints.list);\r\n        // bot.targetItem = power_best || waypoint_best;\r\n        bot.target = opponentData.elem;\r\n        if (bot.target && bot.target.alive) {\r\n            if (bot.currentWeapon.shotNumber < 1) {\r\n                bot.weaponsInventory.getBest();\r\n                bot.currentWeapon = bot.weaponsInventory.selectedWeapon;\t// arma corrente\r\n            }\r\n            bot.brain.pushState(this.chaseTarget.bind(this));\r\n        } else if (bot.targetItem) {\r\n            bot.brain.pushState(this.wander.bind(this));\r\n        }\r\n    }\r\n\r\n    chaseTarget(bot: any, dt: number) {\r\n        bot.status = 'chasing';\r\n        bot.angleWithTarget = Helper.calculateAngle(bot.x, bot.y, bot.target.x, bot.target.y);\r\n\r\n        if (bot.target && bot.target.alive && this.checkIfIsSeen2(bot.target, bot)) {\r\n            var tx = bot.target.x - bot.x,\r\n                ty = bot.target.y - bot.y,\r\n                dist = Math.sqrt(tx * tx + ty * ty);\r\n            bot.old_x = bot.x;\r\n            bot.old_y = bot.y;\r\n\r\n            // da 350 a 225 ci si avvicina al target\r\n            if (dist > 250 /* && bot.aggression>0.55 || dist > 225 && bot.hp>40 */) {\r\n                bot.velX = (tx / dist);\r\n                bot.velY = (ty / dist);\r\n            }\r\n            if (dist > 100 && dist < 250) { // comportamento random\r\n                bot.velX = Math.random() < 0.95 ? bot.velX : this.getRandomDirection(bot);\r\n                bot.velY = Math.random() < 0.95 ? bot.velY : this.getRandomDirection(bot);\r\n            }\r\n            if (dist < 100 /* && bot.aggression < 0.95 */) { // retreat\r\n                bot.velX = -(tx / dist);\r\n                bot.velY = -(ty / dist);\r\n            }/* else{\r\n                bot.velX =  -(ty / dist) * Math.cos(bot.angleWithTarget); \r\n                bot.velY = -(tx / dist) * Math.sin(bot.angleWithTarget); \r\n            } */\r\n            bot.x += bot.velX * bot.speed * dt;\r\n            bot.y += bot.velY * bot.speed * dt;\r\n\r\n            this.shot(bot, dist, dt);\r\n        } else {\r\n            // bot.brain.popState();\r\n            bot.brain.pushState(this.spawn.bind(this));\r\n        }\r\n    }\r\n\r\n    shot(bot: any, dist: number, dt: number) {\r\n        if (dist < 350 && this.checkIfIsSeen2(bot.target, bot)) {\t// SE non troppo lontano e visibile SPARA!\r\n            if (bot.currentWeapon.shotNumber > 0) {                 // se l'arma ha proiettili\r\n                let now = Date.now();\r\n                if (now - bot.attackCounter < bot.currentWeapon.frequency) return;\r\n                bot.attackCounter = now;\r\n\r\n                // bullet prediction ->how well bots are aiming!!\r\n                let predvX = (bot.target.x - bot.target.old_x) / (bot.target.speed * dt) / (bot.speed * dt);\r\n                let predvY = (bot.target.y - bot.target.old_y) / (bot.target.speed * dt) / (bot.speed * dt);\r\n\r\n                let vX = (bot.target.x - bot.x);\r\n                let vY = (bot.target.y - bot.y);\r\n                let dist = Math.sqrt(vX * vX + vY * vY);\t    // si calcola la distanza\r\n                vX = vX / dist + predvX;\t\t\t\t\t\t// si normalizza e si calcola la direzione\r\n                vY = vY / dist + predvY;\r\n                for (let i = bot.currentWeapon.count; i >= 0; i--) {\r\n                    this.bullet.create(bot.x, bot.y, vX, vY, 'enemy', bot.index, bot.damage, bot.currentWeapon);\r\n                    bot.currentWeapon.shotNumber--;\r\n                }\r\n            } else {\r\n                bot.weaponsInventory.getBest();\r\n                bot.currentWeapon = bot.weaponsInventory.selectedWeapon;\t// arma corrente\r\n            }\r\n        }\r\n        else {\r\n            // bot.targetItem = bot.target;    // ???\r\n            bot.brain.pushState(this.wander.bind(this));\r\n        }\r\n    }\r\n\r\n    // TODO: https://stackoverflow.com/questions/24378155/random-moving-position-for-sprite-image\r\n\r\n    wander(bot: any, dt: number) {\r\n\r\n        bot.status = 'wander';\r\n        let opponentData = this.getNearestVisibleEnemy(bot, this.main.actors);\r\n        bot.target = opponentData.elem;\r\n\r\n        if (bot.target && bot.target.alive) {\r\n            if (bot.currentWeapon.shotNumber < 1) {\r\n                bot.weaponsInventory.getBest();\r\n                bot.currentWeapon = bot.weaponsInventory.selectedWeapon;\t// arma corrente\r\n            }\r\n            bot.brain.pushState(this.chaseTarget.bind(this));\r\n            // se non si ha un target si va alla ricerca dei powerup\r\n        } else {\r\n            bot.attackCounter = 0;\r\n            bot.angleWithTarget = 0;\r\n            const power_best = this.getNearestPowerup(bot, this.main.powerup.list);\r\n            const waypoint_best = this.getNearestWaypoint(bot, this.main.waypoints.list);\r\n            bot.targetItem = /* bot.targetItem.length>0? bot.targetItem : */ power_best || waypoint_best; // o l'ultima aposizione del target o il powerup + vicino o il waypoint\r\n\r\n            if (bot.alive && bot.targetItem) {\r\n                this.collectPowerUps(bot, dt);\r\n            } else {\r\n                bot.brain.pushState(this.spawn.bind(this));\r\n            }\r\n        }\r\n    }\r\n\r\n    // trova quello con la distanza minore\r\n    getNearestPowerup(origin: any, data: any) {\r\n        let output: any = { dist: 10000 }; // elemento + vicino ad origin\r\n        data = data.filter((elem: any) => elem.visible == true);           //  si esclude quelli non visibili (quelli già presi!)\r\n        // data = data.filter((e:any)=>this.checkIfIsSeen2(origin, e))   // se non sono visibili si va con i waypoint...\r\n        data = data.forEach((e: any) => {\r\n            let distanza = Helper.calculateDistance(origin, e);\r\n            if (output.dist > distanza && distanza < 400) {\r\n                output = { dist: distanza, elem: e };\r\n            }\r\n        })\r\n        return output.elem;\r\n    }\r\n\r\n    // DA PROVARE CON UN NUOVO STATO!\r\n    /* getNearestWaypoint(bot: any, data: any) {\r\n        let  dist:number = 10000 ; // elemento + vicino ad bot\r\n        let result:any =[];\r\n        data\r\n            .filter((elem: any) => elem[bot.index].visible == true) // solo quelli non ancora attraversati dallo specifico bot\r\n            //.filter((e:any)=>this.checkIfIsSeen2(bot, e))       // può essere anche più vicino ma se è dall'altra parte del muro ?!?!\r\n            .forEach((e: any) => {\r\n                let distanza = Helper.calculateDistance(bot, e);\r\n                if (dist > distanza && distanza < 400) {\r\n                    dist = distanza;\r\n                    result.push({ dist: distanza, elem: e });\r\n                }\r\n            });\r\n        if(result.length==0){\r\n            return null;\r\n        } else if(result.length==1){\r\n            return result[0].elem;\r\n        }else{\r\n            return Math.random()<0.95? result[result.length-1].elem:result[result.length-2].elem;\r\n        }\r\n    } */\r\n\r\n    getNearestWaypoint(bot: any, data: any) {\r\n        let output: any = { dist: 10000 }; // elemento + vicino ad bot\r\n        data\r\n            .filter((elem: any) => elem[bot.index].visible == true) // solo quelli non ancora attraversati dallo specifico bot\r\n            //.filter((e:any)=>this.checkIfIsSeen2(bot, e))       // può essere anche più vicino ma se è dall'altra parte del muro ?!?!\r\n            .forEach((e: any) => {\r\n                let distanza = Helper.calculateDistance(bot, e);\r\n                if (output.dist > distanza && distanza < 400) {\r\n                    output = { dist: distanza, elem: e };\r\n                }\r\n            })\r\n        return output.elem;\r\n    }\r\n\r\n    getNearestVisibleEnemy(origin: any, actors: any) {\r\n        let output: any = { dist: 10000 }; // elemento + vicino ad origin\r\n        actors\r\n            .filter((elem: any) => elem.index !== origin.index && elem.alive && elem.team!=origin.team)   // si esclude se stessi, quelli morti e quelli dell'altro team\r\n            .filter((e: any) => this.checkIfIsSeen2(origin, e))                // si escludono quelli non visibili\r\n            .forEach((e: any) => {\r\n                let distanza = Helper.calculateDistance(origin, e);\r\n                if (output.dist > distanza && distanza < 350) {\r\n                    output = { dist: distanza, elem: e };\r\n                }\r\n            });\r\n        return output;\r\n    }\r\n\r\n    collectPowerUps(bot: any, dt: number) {\r\n        \r\n        if (bot.brain.first) {\r\n            // console.log(`Si calcola il path per: ${bot.index}`);\r\n            // al 1° giro si calcola il percorso\r\n            this.findPath(bot);\r\n        } else {\r\n            // dal 2° in poi si \r\n            this.followPath(bot, dt);\r\n        }\r\n    }\r\n\r\n    findPath(bot: any) {\r\n        // Calculate the path-finding path\r\n        let map = this.main.currentMap;\r\n        const s = map.pixelToMapPos(bot);\r\n        const d = map.pixelToMapPos(bot.targetItem);\r\n        const start = performance.now();\r\n        this.main.easystar.findPath(s.x, s.y, d.x, d.y, (path: any) => {\r\n            if (path === null) {\r\n                // console.log(\"Path was not found.\");\r\n            } else {\r\n                //console.log(`Path of bot ${bot.index} was found. First Point is ${path[0].x} ${path[0].y} `);\r\n                bot.path = path || [];\r\n                const end = performance.now();\r\n                //console.log(`Pathfinding took ${end - start} ms for bot ${bot.index}`);\r\n                this.followPath(bot, 16)\r\n            }\r\n        });\r\n        this.main.easystar.calculate();\r\n    }\r\n\r\n    followPath(bot: any, dt: number) {\r\n        let map = this.main.currentMap;\r\n        // Move along the path\r\n        if (!bot.path.length) {\r\n            return;\r\n        }\r\n        const cell = bot.path[0];\r\n        const cellx = ((cell.x * map.tileSize) + map.tileSize / 2) ;\r\n        const celly = ((cell.y * map.tileSize) + map.tileSize / 2) ;\r\n        bot.angleWithTarget = Helper.calculateAngle(bot.x, bot.y, cellx, celly);\r\n        // We need to get the distance\r\n        var tx = cellx - bot.x,\r\n            ty = celly - bot.y,\r\n            dist = Math.sqrt(tx * tx + ty * ty);\r\n        if (dist != 0) {\r\n            bot.velX = (tx / dist);\r\n            bot.velY = (ty / dist);\r\n            bot.old_x = bot.x;\r\n            bot.old_y = bot.y;\r\n            bot.x += bot.velX * bot.speed * dt;\r\n            bot.y += bot.velY * bot.speed * dt;\r\n        }\r\n        // if finished move to the next path element\r\n        if (dist < 3) {\r\n            bot.path = bot.path.slice(1);\r\n            if (bot.path.length === 0) {\r\n                // this.findPath(bot);\r\n                bot.brain.pushState(this.wander.bind(this));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Helper } from '../helper';\r\n\r\nexport const tipiPowerUp = {\r\n    'health':      { name: 'health', hp:5, color:'DodgerBlue', r: 5, spawnTime:  30000 },\r\n    'megaHealth':  { name: 'megaHealth', hp:50, color:'DodgerBlue', r:10, spawnTime: 30000 },\r\n    'armour':      { name: 'armour', ap:5, color:'green', r:5, spawnTime:  30000 },\r\n    'megaArmour':  { name: 'megaArmour', ap:50, color:'green', r:10, spawnTime: 30000 },\r\n    'quad':        { name: 'quad', multiplier:4, color:'violet', r:10, spawnTime: 30000, enterAfter: 60000, duration: 10000 },\r\n    'speed':       { name: 'speed', multiplier: 1.5, color:'yellow', r:10, spawnTime: 30000, enterAfter: 30000, duration: 10000 },\r\n    'ammoRifle':   { for:  'Rifle', color: 'brown', r:8, spawnTime:30000, amount:30 },\r\n    'ammoShotgun': { for:  'Shotgun', color:'brown', r:8, spawnTime:30000,amount:24 },\r\n    'ammoPlasma':  { for:  'Plasma', color: 'blue', r:8, spawnTime:30000,amount:25 },\r\n    'ammoRocket':  { for:  'Rocket', color: 'red', r:8, spawnTime:30000,amount:5 },\r\n    'ammoRailgun': { for:  'Railgun', color:'green', r:8, spawnTime:30000,amount:5 },\r\n    'weaponShotgun':{ for: 'Shotgun', color:'brown', r:16, spawnTime:30000,amount:24 },\r\n    'weaponPlasma':{ for:  'Plasma', color: 'blue', r:16, spawnTime:30000,amount:25 },\r\n    'weaponRocket':{ for:  'Rocket', color: 'red', r:16, spawnTime:30000,amount:5 },\r\n    'weaponRailgun':{ for: 'Railgun',color:'green', r:16, spawnTime:30000,amount:5 }\r\n}\r\n\r\n\r\n\r\nexport class PowerUp {\r\n\r\n    list: any[] = [];\r\n    pool: any[] = [];\r\n\r\n    player:     any;\r\n    bots:       any;\r\n    particelle: any;\r\n    ctx:        any;\r\n    main:       any;\r\n    c:          any;\r\n\r\n    constructor() { \r\n    }\r\n\r\n    init(main: any){\r\n        this.list = [];\r\n        this.main       = main;\r\n        this.c          = main.c;\r\n        this.player     = main.player;\r\n        this.bots       = main.enemy;\r\n        this.ctx        = main.ctx;\r\n        this.particelle = main.particelle;\r\n    }\r\n\r\n    create(x: number, y: number, type: string, index:number) {\r\n        let powerup        = this.pool.length > 0 ? this.pool.pop(): new Object();\r\n        powerup.type       = tipiPowerUp[type];\r\n        powerup.index      = index;\r\n        powerup.x          = x;\r\n        powerup.y          = y;\r\n        if(type.startsWith('ammo')||type.startsWith('weapon')){\r\n            powerup.ref = type;                     // permette di distinguere tra bullet e weapons\r\n            powerup.amount = powerup.type.amount;   // quanti bullet\r\n            powerup.for = powerup.type.for;         // per quale arma\r\n        }\r\n        powerup.reloadRate = 0;\r\n        powerup.spawnTime  = powerup.type.spawnTime;   // tempo impiegato per respawn\r\n        if(powerup.type.name=='quad' || powerup.type.name=='speed'){\r\n            powerup.visible = false;\r\n            powerup.enterAfter = powerup.type.enterAfter;   // delay di entrata\r\n            powerup.durationRate = 0;                       // indica il contatore della durata\r\n            powerup.duration = powerup.type.duration;       // eventuale durata dell'effetto\r\n            powerup.takenBy = {};                           // indica chi l'o sta utilizzando\r\n        } else {\r\n            powerup.enterAfter = 0;\r\n            powerup.visible    = true;\r\n        }\r\n        powerup.r            = powerup.type.r;  // raggio esterno rotante\r\n        powerup.r1           = powerup.type.r;  // raggio interno dinamico\r\n        powerup.color        = powerup.type.color;\r\n        // animazione SOURCE: https://stackoverflow.com/questions/20445357/canvas-rotate-circle-in-certain-speed-using-requestanimationframe\r\n        powerup.startAngle   = 2*Math.PI;\r\n        powerup.endAngle     = Math.PI*1.5;\r\n        powerup.currentAngle = 0;\r\n        powerup.angleForDinamicRadius = 0;   // animazione del raggio dinamico\r\n        this.list.push(powerup);\r\n    };\r\n\r\n    upgrade(powerup:any, who:any){\r\n        powerup.takenBy = who;\r\n        if(powerup.type.name=='health'){\r\n            who.hp += powerup.type.hp;\r\n        } else if (powerup.type.name=='armour'){\r\n            who.ap += powerup.type.ap;\r\n        } else if (powerup.type.name=='megaHealth'){\r\n            who.hp += powerup.type.hp;\r\n        } else if (powerup.type.name=='megaArmour'){\r\n            who.ap += powerup.type.ap;\r\n        } else if (powerup.type.name=='quad'){\r\n             who.damage *= powerup.type.multiplier;\r\n        } else if (powerup.type.name=='speed'){\r\n             who.speed *= powerup.type.multiplier;\r\n        }\r\n    }\r\n\r\n    deupgrade(powerup:any){\r\n        if(powerup.type.name=='regeneration'){\r\n           console.log('TO DO!');\r\n        } else if (powerup.type.name=='speed'){\r\n            powerup.takenBy.speed /= powerup.type.multiplier;\r\n        } else if (powerup.type.name=='quad'){\r\n            powerup.takenBy.damage /= powerup.type.multiplier;\r\n        }\r\n    }\r\n\r\n    update(dt:number, timestamp:number) {\r\n        for (var i = this.list.length - 1; i >= 0; i--) {\r\n            var powerup = this.list[i];\r\n\r\n            powerup.currentAngle += dt * 0.004;             // animazione del cerchio esterno...\r\n            powerup.angleForDinamicRadius += 2*Math.PI/60;  // animazione del raggio dinamico di 6° a frame\r\n\r\n            /// reset angle\r\n            powerup.currentAngle %= 2 * Math.PI;\r\n\r\n            if (!powerup.visible) {\r\n                powerup.reloadRate+= dt;  // si inizia a contare se non visibile\r\n            }\r\n\r\n            // se non è visibile e ha una durata inizia a contare la durata dell'effetto (quad, speed, etc)\r\n            if(!powerup.visible && powerup.duration && powerup.startDurationRate){\r\n                powerup.durationRate+= dt;\r\n            }\r\n\r\n            // si guarda se i powerup entrano in contatto con il player\r\n            if (powerup.visible && Helper.circleCollision(powerup, this.player)) {\r\n                for (var j = 0; j < 10; j++) {\r\n                    // TODO: cambiare effetto !!!\r\n                    this.particelle.create(powerup.x, powerup.y, Math.random() * 2 - 2, Math.random() * 2 - 2, 2 , powerup.color)\r\n                }\r\n                powerup.visible = false;\r\n                if(powerup.duration){\r\n                    powerup.startDurationRate= true;\r\n                }  \r\n                this.upgrade(powerup, this.player);\r\n                // se AMMO o WEAPON\r\n                if(powerup.ref){\r\n                    if(powerup.ref.startsWith('weapon')){\r\n                        this.player.weaponsInventory.setAvailabilityAndNumOfBullets(powerup.for, powerup.amount);\r\n                    } else{\r\n                        this.player.weaponsInventory.setNumOfBullets(powerup.for, powerup.amount);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // si guarda se i powerup entrano in contatto con qualche nemico\r\n            for (let i = this.bots.list.length - 1; i >= 0; i--) {\r\n                const bot = this.bots.list[i];\r\n                if (powerup.visible && Helper.circleCollision(powerup, bot)) {\r\n                    for (var j = 0; j < 12; j++) {\r\n                        this.particelle.create(powerup.x, powerup.y, Math.random() * 2 - 2, Math.random() * 2 - 2, 5, powerup.color)\r\n                    }\r\n                    powerup.visible = false;\r\n                    if(powerup.duration){\r\n                        powerup.startDurationRate= true;\r\n                    }  \r\n                    this.upgrade(powerup, bot);\r\n                    // se AMMO o WEAPON\r\n                    if(powerup.ref){\r\n                        if(powerup.ref.startsWith('weapon')){\r\n                            bot.weaponsInventory.setAvailabilityAndNumOfBullets(powerup.for, powerup.amount);\r\n                            bot.weaponsInventory.getBest();\r\n                            bot.currentWeapon = bot.weaponsInventory.selectedWeapon;\t// arma corrente\r\n                        } else{\r\n                            bot.weaponsInventory.setNumOfBullets(powerup.for, powerup.amount);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            // RESPAWN\r\n            if (powerup.reloadRate > (powerup.spawnTime + powerup.enterAfter) ) {\t// numero di cicli oltre il quale è nuovamente visibile\r\n                powerup.visible = true;\r\n                powerup.reloadRate = 0;\r\n            }\r\n                \r\n            // FINE EFFETTO \r\n            if(powerup.durationRate> powerup.duration){\r\n                this.deupgrade(powerup);   // FIXME: per ora è solo per il player...\r\n                powerup.startDurationRate= false;\r\n                powerup.durationRate = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        for (let i = this.list.length - 1; i >= 0; i--) {\r\n            let powerup = this.list[i];\r\n            // tutti i powerup tranne ammo e weapons\r\n            if (powerup.visible && !powerup.ref) {\r\n                // centro pulsante\r\n                powerup.r1 =  2 + 0.1 + Math.sin(powerup.angleForDinamicRadius)*2;   // il sin va da -1 a +1\r\n                let x = powerup.x - this.main.camera.x;\r\n                let y = powerup.y - this.main.camera.y;\r\n                this.ctx.beginPath();\r\n                this.ctx.arc(x, y, powerup.r1, 0, 6.2832);\r\n                this.ctx.fillStyle = powerup.color;\r\n                this.ctx.fill();\r\n                this.ctx.closePath()\r\n\r\n                // cerchio esterno\r\n                this.ctx.beginPath();                  \r\n                this.ctx.arc(x, y, powerup.r + 2.5, powerup.startAngle + powerup.currentAngle, powerup.endAngle + powerup.currentAngle, false);\r\n                this.ctx.strokeStyle = powerup.color;\r\n                this.ctx.lineWidth = 2.0;\r\n                this.ctx.stroke();\r\n                if (this.main.debug) {\r\n                    this.ctx.font = 'bold 8px/1 Arial';\r\n                    this.ctx.fillStyle = 'black';\r\n                    this.ctx.fillText(powerup.index.toString(), powerup.x - this.main.camera.x - 6, powerup.y - this.main.camera.y -12);\r\n                }\r\n\r\n            } \r\n            if(powerup.visible){\r\n                // AMMO e WEAPONS\r\n                let x = powerup.x - this.main.camera.x;\r\n                let y = powerup.y - this.main.camera.y;\r\n                this.ctx.beginPath();\r\n                this.ctx.arc(x, y, powerup.r, 0, 6.2832);\r\n                this.ctx.fillStyle = powerup.color;\r\n                this.ctx.fill();\r\n                this.ctx.closePath()\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n","import {Helper} from'./helper';\r\n/* import Game from './game'; */\r\n\r\nexport class ControlHandler {\r\n\r\n    a:          boolean = false;\r\n    d:          boolean = false;\r\n    w:          boolean = false;\r\n    s:          boolean = false;\r\n    mouseLeft:  boolean = false;\r\n    mouseRight: boolean = false;\r\n    mouseX:     number  = 0;\r\n    mouseY:     number = 0;\r\n\r\n    main:   any;\r\n    canvas: any;\r\n    camera: any;\r\n    player: any;\r\n\r\n    back2Player:boolean = true;\r\n\r\n    constructor(main: any){\r\n        this.main   = main;\r\n        this.canvas = main.canvas;\r\n        this.camera = main.camera;\r\n        this.player = main.player;\r\n\r\n        this.canvas.addEventListener('keydown', this.keyDownEvent.bind(this));\r\n        this.canvas.addEventListener('keyup', this.keyUpEvent.bind(this));\r\n        this.canvas.addEventListener('mousedown', this.mouseDownEvent.bind(this));\r\n        this.canvas.addEventListener('mouseup', this.mouseUpEvent.bind(this));\r\n        this.canvas.addEventListener('mousemove', this.mouseMoveEvent.bind(this));\r\n        this.canvas.addEventListener('contextmenu', this.contextMenuEvent.bind(this))\r\n        window.addEventListener('mousewheel', this.mouseWheelEvent.bind(this));\r\n        window.addEventListener('DOMMouseScroll', this.mouseWheelEvent.bind(this));\r\n    }\r\n\r\n    keyDownEvent(e:any) {\r\n        if (e.keyCode == 87) {\r\n            this.w = true\r\n        } else if (e.keyCode == 83) {\r\n            this.s = true\r\n        } else if (e.keyCode == 65) {\r\n            this.a = true\r\n        } else if (e.keyCode == 68) {\r\n            this.d = true\r\n        } else if ((e.keyCode >= 48 || e.keyCode <= 57) && this.main.state == 'game') {\r\n            this.player.hotKey(e.keyCode)\r\n        }\r\n        if (this.mouseX > 0 && this.mouseX < this.canvas.width && this.mouseY > 0 && this.mouseY < this.canvas.height) {\r\n            e.preventDefault();\r\n            return false\r\n        }\r\n    }\r\n    \r\n    keyUpEvent(e: any) {\r\n        if (e.keyCode == 87 || e.keyCode == 38) {\r\n            this.w = false\r\n        } else if (e.keyCode == 83) {\r\n            this.s = false\r\n        } else if (e.keyCode == 65) {\r\n            this.a = false\r\n        } else if (e.keyCode == 66) {\r\n            this.back2Player =!this.back2Player;\r\n            this.followBot(this.back2Player);\r\n        }else if (e.keyCode == 68) {\r\n            this.d = false\r\n        } else if (e.keyCode == 71) {   // g\r\n            this.main.player.godMode = !this.main.player.godMode;\r\n        } else if(e.keyCode == 73){     // i per debug\r\n            this.main.debug = !this.main.debug;\r\n        }else if (e.keyCode == 80) {\r\n            if (!this.main.paused) {    // se non è già in pausa...\r\n                this.main.paused = !this.main.paused;\r\n                if(this.main.paused){\r\n                    this.main.loadPauseScreen(this.main);\r\n             }\r\n            }\r\n        } else if (this.mouseX > 0 && this.mouseX < this.canvas.width && this.mouseY > 0 && this.mouseY < this.canvas.height) {\r\n            e.preventDefault();\r\n            return false\r\n        }\r\n    }\r\n\r\n    // permette di ciclare tra i bot\r\n    followBot(back:boolean){\r\n        const botIndex = Helper.getBotsName(this.main.enemy.list.map(e=>e.index));  // FIXME: è usato sia per i nomi che per l'index\r\n        let currentActorInCamera = back?this.player: this.main.enemy.list[botIndex];\r\n\t\tthis.main.camera.setCurrentPlayer(currentActorInCamera);\r\n\t\tthis.main.camera.adjustCamera(currentActorInCamera);\r\n    }\r\n    \r\n    mouseDownEvent(e:any) {\r\n        if (e.button == 0) {\r\n            this.mouseLeft = true\r\n        } else if (e.button == 2) {\r\n            this.mouseRight = true\r\n        }\r\n    }\r\n    \r\n    mouseUpEvent(e:any) {\r\n        if (this.mouseLeft) {\r\n            if (this.main.state == 'menuScreen') {\r\n                // this.main.startGame();\r\n                console.log(e);\r\n\r\n            }\r\n            if (this.main.paused) {\r\n                this.main.paused= false;\r\n            }\r\n            if (this.main.state == 'statsScreen') {\r\n                this.main.startGame();\r\n            }\r\n        }\r\n\r\n        if (e.button == 0) {\r\n            this.mouseLeft = false;\r\n        } else if (e.button == 2) {\r\n            this.mouseRight = false;\r\n        }\r\n    }\r\n\r\n    mouseMoveEvent(e:any) {\r\n        var rect = this.canvas.getBoundingClientRect();\r\n        this.mouseX = e.clientX - rect.left;    // tra 0 e 800\r\n        this.mouseY = e.clientY - rect.top;     // tra 0 e 600\r\n        // angolo tra il player e il mirino\r\n        this.player.angle = Helper.calculateAngle(this.player.x - this.camera.x, this.player.y -this.camera.y, this.mouseX, this.mouseY);\r\n    }\r\n\r\n    mouseWheelEvent(e:any) {\r\n         if (this.main.state == 'game') {\r\n            this.player.wheel(e.wheelDelta ? e.wheelDelta : -e.detail);\r\n            return true;\r\n        }\r\n        if (this.mouseX > 0 && this.mouseX < this.canvas.width && this.mouseY > 0 && this.mouseY < this.canvas.height) {\r\n            e.preventDefault();\r\n            return false\r\n        }\r\n    }\r\n    \r\n    contextMenuEvent(e:any) {\r\n        e.preventDefault()\r\n    }\r\n\r\n}\r\n\r\n","import { Helper } from '../helper';\r\nimport { WeaponsInventory } from './weapons';\r\nexport class Player {\r\n\r\n\t// PLAYER\r\n\tx: number;\r\n\told_x: number;\r\n\ty: number;\r\n\told_y: number;\r\n\tr: number\r\n\tspeed: number;\r\n\tangle: number;\t\t\t\t// angolo con il mirino (dove punta l'arma)\r\n\r\n\tname: string;\r\n\thp: number;\t\t\t\t\t// punti vita\r\n\tap: number;\t\t\t\t\t// punti armatura\r\n\tkills: number;\t\t\t\t// nemici uccisi\r\n\tscore: number = 0;\t\t\t// numero di uccisioni\r\n\tnumberOfDeaths: number;\t\t// numero di volte in vui è stato ucciso\r\n\r\n\ttrails: any[] = [];\r\n\r\n\tdamage: number;\t\t\t\t// 1 capacità di far danno 1 normale 4 quaddamage\r\n\talive: boolean;\t\t\t\t// se il player è vivo o morto ()\r\n\tindex: number;\t\t\t\t// è l'id del giocatore\r\n\trespawnTime: number = 0;\r\n\t\r\n\tgodMode: boolean = false;\r\n\r\n\tteam:string;\r\n\t\r\n\tweaponsInventory: WeaponsInventory;\r\n\tcurrentWeapon: any;\t\t\t// arma corrente\r\n\tattackCounter: number = 0;\t\t// frequenza di sparo\r\n\t// shootRate:     number = 200;\t// frequenza di sparo\r\n\r\n\tcanvas:  any;\r\n\tctx:     any;\r\n\tcamera:  any;\r\n\tmain:    any\r\n\tenemy:   any\r\n\tc:       any\r\n\tmap:     any\r\n\tcontrol: any;\r\n\tbullet:  any;\r\n\r\n\r\n\tconstructor() {\r\n\t}\r\n\r\n\tinit(main: any) {\r\n\t\tthis.main = main;\r\n\t\tthis.c = main.c;\r\n\t\tthis.canvas = main.canvas;\r\n\t\tthis.ctx = main.ctx;\r\n\t\tthis.camera = main.camera;\r\n\t\tthis.enemy = main.enemy;\r\n\t\tthis.bullet = main.bullet;\r\n\t\tthis.map = main.currentMap;\r\n\t\tthis.control = main.control;\r\n\t}\r\n\r\n\tcreatePlayer() {\r\n\t\tthis.name = \"Lorenzo\";\r\n\t\tthis.index = 100;\r\n\t\tthis.alive = true;\t\t\t\t// \r\n\t\t// const spawn = Helper.getSpawnPoint(this.main.data.spawn);\r\n\t\tthis.x     = 400;\r\n\t\tthis.old_x = 400;\r\n\t\tthis.y     = 300;\r\n\t\tthis.old_y = 300;\r\n\t\tthis.team = 'team1';\r\n\t\t//this.camera.adjustCamera(this);\r\n\t\tthis.r = this.c.PLAYER_RADIUS\r\n\t\tthis.speed = this.c.PLAYER_SPEED;\t// è uguale in tutte le direzioni\r\n\t\tthis.damage = 1;\t\t\t\t\t// danno da moltiplicare per 4 con quad damage\r\n\t\tthis.angle = 0;\t\t\t\t\t\t// angolo tra asse x e puntatore del mouse\r\n\t\tthis.hp = this.c.PLAYER_HP;\t\t\t// punti vita\r\n\t\tthis.ap = this.c.PLAYER_AP;\t\t\t// punti armatura\r\n\t\tthis.kills = 0;\t\t\t\t\t\t// uccisioni\r\n\t\tthis.numberOfDeaths = 0;\t    \t// numero di volte in cui è stato ucciso\r\n\r\n\t\tthis.weaponsInventory = new WeaponsInventory();\r\n\t\tthis.currentWeapon = this.weaponsInventory.selectedWeapon;\t\t// arma corrente\r\n\t}\r\n\r\n\tstorePosForTrail(x: number, y: number) {\r\n\t\t// push an item\r\n\t\tthis.trails.push({ x, y });\r\n\t\t//get rid of first item\r\n\t\tif (this.trails.length > this.c.MOTION_TRAILS_LENGTH) {\r\n\t\t\tthis.trails.shift();\r\n\t\t}\r\n\t}\r\n\r\n\thotKey(keyCode:number) {\r\n\t\tif (keyCode == 48) {\r\n\t\t\tkeyCode = 58\r\n\t\t}\r\n\t\tif (keyCode - 49 in this.weaponsInventory.weapons) {\r\n\t\t\tthis.weaponsInventory.weapon = keyCode - 49;\r\n\t\t\t// se disponibile si sceglie\r\n\t\t\tif(this.weaponsInventory.weapons[this.weaponsInventory.weapon].available){\r\n\t\t\t\tthis.weaponsInventory.selectedWeapon = this.weaponsInventory.weapons[this.weaponsInventory.weapon];\r\n\t\t\t\tthis.currentWeapon = this.weaponsInventory.selectedWeapon;\t\t// arma corrente\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twheel(delta: number) {\r\n\t\tif (delta > 0) {\r\n\t\t\tif (this.weaponsInventory.weapon <= 0) {\r\n\t\t\t\tthis.weaponsInventory.weapon = this.weaponsInventory.weapons.length - 1\r\n\t\t\t} else {\r\n\t\t\t\tthis.weaponsInventory.weapon--;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.weaponsInventory.weapon >= this.weaponsInventory.weapons.length - 1) {\r\n\t\t\t\tthis.weaponsInventory.weapon = 0\r\n\t\t\t} else {\r\n\t\t\t\tthis.weaponsInventory.weapon++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// se disponibile si sceglie\r\n\t\tif(this.weaponsInventory.weapons[this.weaponsInventory.weapon].available){\r\n\t\t\tthis.weaponsInventory.selectedWeapon = this.weaponsInventory.weapons[this.weaponsInventory.weapon];\r\n\t\t\tthis.currentWeapon = this.weaponsInventory.selectedWeapon;\t\t// arma corrente\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate getPlayerColour() {\r\n\t\tif (this.speed > 4 / 16) {\r\n\t\t\treturn 'yellow';\r\n\t\t}\r\n\t\tif (this.damage > 1) {\r\n\t\t\treturn 'violet';\r\n\t\t}\r\n\t\treturn this.c.PLAYER_COLOUR_INSIDE;\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.alive) {\t// solo se il player è vivo!\r\n\r\n\t\t\t// trails\r\n\t\t\t for (let i = 0; i < this.trails.length; i++) {\r\n\t\t\t \tlet ratio = (i + 1) / this.trails.length;\r\n\t\t\t \tthis.ctx.beginPath();\r\n\t\t\t \tthis.ctx.arc(this.trails[i].x - this.camera.x, this.trails[i].y - this.camera.y, ratio * this.r *(3/ 5) + this.r *(2/ 5), 0, 2 * Math.PI, true);\r\n\t\t\t \tthis.ctx.fillStyle = this.ctx.fillStyle = `rgb(127, 134, 135,${ratio/2})`;\r\n\t\t\t \tthis.ctx.fill();\r\n\t\t\t }\r\n\t\t\t// draw the colored region\r\n\t\t\tthis.ctx.beginPath();\r\n\t\t\tthis.ctx.arc(this.x - this.camera.x, this.y - this.camera.y, this.r, 0, 2 * Math.PI, true);\r\n\t\t\tthis.ctx.fillStyle = this.getPlayerColour();\r\n\t\t\tthis.ctx.fill();\r\n\r\n\t\t\t// draw the stroke\r\n\t\t\tthis.ctx.lineWidth = 2;\r\n\t\t\tthis.ctx.strokeStyle = this.c.PLAYER_COLOUR_OUTSIDE;\r\n\t\t\tthis.ctx.stroke();\r\n\r\n\r\n\t\t\t// beccuccio arma\r\n\t\t\tthis.ctx.strokeStyle = this.c.PLAYER_COLOUR_OUTSIDE;\r\n\t\t\tthis.ctx.beginPath();\r\n\t\t\tthis.ctx.moveTo(this.x - this.camera.x, this.y - this.camera.y);\r\n\t\t\tvar pointerLength = 12.5;\r\n\t\t\tthis.ctx.lineTo(\r\n\t\t\t\tthis.x - this.camera.x + pointerLength * Math.cos(this.angle),\r\n\t\t\t\tthis.y - this.camera.y + pointerLength * Math.sin(this.angle)\r\n\t\t\t);\r\n\t\t\tthis.ctx.stroke();\r\n\r\n\t\t\tif (this.main.debug) {\r\n\t\t\t\tthis.ctx.font = 'bold 8px/1 Arial';\r\n\t\t\t\tthis.ctx.fillStyle = 'black';\r\n\t\t\t\tthis.ctx.fillText(this.x.toFixed(2).toString(), this.x - this.camera.x - 5, this.y - this.camera.y - 15);\r\n\t\t\t\tthis.ctx.fillText(this.y.toFixed(2).toString(), this.x - this.camera.x - 5, this.y - this.camera.y + 20);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trespawn(timestamp:number) {\r\n\t\tconst spawn = Helper.getSpawnPoint(this.main.data.spawn);\r\n\t\tconsole.log(`Player is swawning at ${spawn.x} - ${spawn.y}`);\r\n\t\tthis.index = 100;\r\n\t\tthis.x = spawn.x;\r\n\t\tthis.y = spawn.y;\r\n\t\tthis.camera.setCurrentPlayer(this);\r\n\t\tthis.camera.adjustCamera(this);\r\n\r\n\t\tlet amplitude = 100;\r\n\t\t\r\n\t\tsetTimeout(() => {\t\r\n\t\t\t\tfor (let i = 0; i < 100; i++) {\r\n\t\t\t\t\tlet beta = timestamp + i*20 + + Math.PI / 2;\r\n\t\t\t\t\tlet respawnParticles: any = {};\r\n\t\t\t\t\trespawnParticles.x = this.x  + Math.cos(beta) * Helper.randBetween(0,amplitude);\r\n\t\t\t\t\trespawnParticles.y = this.y  + Math.sin(beta) * Helper.randBetween(0,amplitude);\r\n\t\t\t\t\tthis.main.particelle.create(respawnParticles.x, respawnParticles.y , 0.5,0.5, 6, Helper.randomElementInArray(this.c.PLAYER_RESPAWN));\r\n\t\t\t\t}\t\t\r\n\t\t}, 150);\r\n\r\n\t\tthis.r = this.c.PLAYER_RADIUS\r\n\t\tthis.speed = this.c.PLAYER_SPEED;\t// è uguale in tutte le direzioni\r\n\t\tthis.damage = 1;\t\t\t\t\t// è il moltiplicatore del danno (quad = 4)\r\n\t\tthis.angle = 0;\t\t\t\t\t\t// angolo tra asse x e puntatore del mouse\r\n\t\tthis.hp = this.c.PLAYER_HP;\t\t\t// punti vita\r\n\t\tthis.ap = this.c.PLAYER_AP;\t\t\t // punti armatura\r\n\t\tthis.alive = true;\t\t\t\t\t// il player è nuovamente presente in gioco\r\n\t\t// this.kills = 0;\t\t\t\t\t// si mantengono...\r\n\t\t// this.numberOfDeaths = 0;\t    \t// si mantengono...\r\n\t\tthis.weaponsInventory.resetWeapons();                    \t// munizioni e disponibilità default\r\n\t\tthis.weaponsInventory.setWeapon(0);\t\t\t\t\t\t\t// arma default\r\n\t\tthis.currentWeapon = this.weaponsInventory.selectedWeapon;\t// arma corrente\r\n\r\n\t}\r\n\r\n\t// collisione tra elementi della stessa dimensione (tile e player)\r\n\t// SOURCE: https://codereview.stackexchange.com/questions/60439/2d-tilemap-collision-method\r\n\tcheckmove(x: number, y: number): boolean {\r\n\t\tif (this.map.map[Math.floor(y / this.c.TILE_SIZE)][Math.floor(x / this.c.TILE_SIZE)] == 1\r\n\t\t\t|| this.map.map[Math.floor(y / this.c.TILE_SIZE)][Math.ceil(x / this.c.TILE_SIZE)] == 1\r\n\t\t\t|| this.map.map[Math.ceil(y / this.c.TILE_SIZE)][Math.floor(x / this.c.TILE_SIZE)] == 1\r\n\t\t\t|| this.map.map[Math.ceil(y / this.c.TILE_SIZE)][Math.ceil(x / this.c.TILE_SIZE)] == 1) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tisLavaOrToxic(x: number, y: number): void {\r\n\t\tif (this.map.map[Math.floor(y / this.c.TILE_SIZE)][Math.floor(x / this.c.TILE_SIZE)] == 3\r\n\t\t\t|| this.map.map[Math.floor(y / this.c.TILE_SIZE)][Math.ceil(x / this.c.TILE_SIZE)] == 3\r\n\t\t\t|| this.map.map[Math.ceil(y / this.c.TILE_SIZE)][Math.floor(x / this.c.TILE_SIZE)] == 3\r\n\t\t\t|| this.map.map[Math.ceil(y / this.c.TILE_SIZE)][Math.ceil(x / this.c.TILE_SIZE)] == 3\r\n\t\t\t|| this.map.map[Math.floor(y / this.c.TILE_SIZE)][Math.floor(x / this.c.TILE_SIZE)] == 4\r\n\t\t\t|| this.map.map[Math.floor(y / this.c.TILE_SIZE)][Math.ceil(x / this.c.TILE_SIZE)] == 4\r\n\t\t\t|| this.map.map[Math.ceil(y / this.c.TILE_SIZE)][Math.floor(x / this.c.TILE_SIZE)] == 4\r\n\t\t\t|| this.map.map[Math.ceil(y / this.c.TILE_SIZE)][Math.ceil(x / this.c.TILE_SIZE)] == 4\r\n\t\t) {\r\n\t\t\tthis.hp -= 0.5;\r\n\t\t\tfor (var j = 0; j < 24; j++) {\r\n\t\t\t\tthis.main.particelle.create(this.x + Helper.randBetween(-this.r, this.r), this.y + Helper.randBetween(-this.r, this.r), Math.random() * 2 - 2, Math.random() * 2 - 2, 2, Helper.randomElementInArray(this.c.FIRE_IN_LAVA))\r\n\t\t\t}\r\n\t\t\tif (this.hp <= 0) {\r\n\t\t\t\tthis.alive = false;\r\n\t\t\t\tthis.numberOfDeaths++;\r\n\t\t\t\tfor (let b = 0; b < 36; b++) {\r\n\t\t\t\t\tthis.main.blood.create(this.x, this.y, Math.random() * 2 - 2, Math.random() * 2 - 2, this.c.BLOOD_RADIUS) // crea il sangue\r\n\t\t\t\t}\r\n\t\t\t\tlet currentActorInCamera = this.enemy.list[0];\r\n\t\t\t\tthis.main.camera.setCurrentPlayer(currentActorInCamera);\r\n\t\t\t\tthis.main.camera.adjustCamera(currentActorInCamera);\r\n\t\t\t\t// setTimeout(() =>this.player.respawn(), this.c.GAME_RESPAWN_TIME);\r\n\t\t\t\tconsole.log(`Player killed by lava.`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcollisionDetection(dt: number) {\r\n\t\tlet spostamento = this.speed * dt;\r\n\t\tthis.old_x = this.x;\r\n\t\tthis.old_y = this.y;\r\n\t\tif (this.control.w) { // W \r\n\t\t\t// collisione con nemici\r\n\t\t\tthis.enemy.list.forEach((enemy:any) => {\r\n\t\t\t\tif(enemy.alive && Helper.circleCollision(enemy, this)){\r\n\t\t\t\t\tthis.y += 4*spostamento;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (this.checkmove(this.x - this.r, this.y - this.r - spostamento)) {\r\n\t\t\t\tthis.y -= spostamento;\r\n\t\t\t\tif (this.y - this.r < this.camera.y) {\r\n\t\t\t\t\tthis.y = this.camera.y + this.r;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.control.s) {\t// S\r\n\t\t\t// collisione con nemici\r\n\t\t\tthis.enemy.list.forEach((enemy:any) => {\r\n\t\t\t\tif(enemy.alive && Helper.circleCollision(enemy, this)){\r\n\t\t\t\t\tthis.y -= 4*spostamento;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (this.checkmove(this.x - this.r, this.y - this.r + spostamento)) {\r\n\t\t\t\tthis.y += spostamento;\r\n\t\t\t\tif (this.y + this.r >= this.camera.y + this.camera.h) {\r\n\t\t\t\t\tthis.y = this.camera.y + this.camera.h - this.r;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.control.a) {\t// a\r\n\t\t\t// collisione con nemici\r\n\t\t\tthis.enemy.list.forEach((enemy:any) => {\r\n\t\t\t\tif(enemy.alive && Helper.circleCollision(enemy, this)){\r\n\t\t\t\t\tthis.x += 4*spostamento;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (this.checkmove(this.x - this.r - spostamento, this.y - this.r)) {\r\n\t\t\t\tthis.x -= spostamento;\r\n\t\t\t\tif (this.x - this.r < this.camera.x) {\r\n\t\t\t\t\tthis.x = this.camera.x + this.r;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.control.d) {\t// d\r\n\t\t\t// collisione con nemici\r\n\t\t\tthis.enemy.list.forEach((enemy:any) => {\r\n\t\t\t\tif(enemy.alive && Helper.circleCollision(enemy, this)){\r\n\t\t\t\t\tthis.y -= 4* spostamento;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (this.checkmove(this.x - this.r + spostamento, this.y - this.r)) {\r\n\t\t\t\tthis.x += spostamento;\r\n\t\t\t\tif (this.x + this.r >= this.map.mapSize.w) {\r\n\t\t\t\t\tthis.x = this.camera.x + this.camera.w - this.r;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.storePosForTrail(this.x, this.y);\r\n\t}\r\n\r\n\tshoot(dt: number) {\r\n\t\tif (this.alive && this.currentWeapon.shotNumber>0) {\r\n\t\t\tlet now = Date.now();\r\n\t\t\tif (now - this.attackCounter < this.currentWeapon.frequency) return;\r\n\t\t\tthis.attackCounter = now;\r\n\t\t\tlet vX = (this.control.mouseX - (this.x - this.camera.x));\r\n\t\t\tlet vY = (this.control.mouseY - (this.y - this.camera.y));\r\n\t\t\tlet dist = Math.sqrt(vX * vX + vY * vY);\t// si calcola la distanza\r\n\t\t\tvX = vX / dist;\t\t\t\t\t\t\t\t// si normalizza\r\n\t\t\tvY = vY / dist;\r\n\t\t\tfor (let i = this.currentWeapon.count-1; i >= 0; i--) {\r\n\t\t\t\tthis.bullet.create(this.x, this.y, vX, vY, 'player', this.index, this.damage, this.currentWeapon);  // 8 è la velocità del proiettile\r\n\t\t\t\tthis.currentWeapon.shotNumber--;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\t// da valutare se prevederlo in automatico\r\n\t\t\tthis.weaponsInventory.getBest();\r\n            this.currentWeapon = this.weaponsInventory.selectedWeapon;\t// arma corrente\r\n\t\t}\r\n\t}\r\n\r\n\tupdate(dt: number, timestamp: number) {\r\n\r\n\t\tif (this.alive) {\r\n\t\t\tthis.isLavaOrToxic(this.x, this.y);\r\n\t\t\tthis.collisionDetection(dt);\r\n\t\t\tif (this.control.mouseLeft) {\t// SE è PREMUTO IL btn del mouse\r\n\t\t\t\tthis.shoot(dt);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.alive) {\r\n\t\t\tthis.respawnTime += dt;\r\n\t\t\tif (this.respawnTime > this.c.GAME_RESPAWN_TIME) {\t// numero di cicli oltre il quale è nuovamente visibile\r\n\t\t\t\tthis.respawn(timestamp);\r\n\t\t\t\tthis.respawnTime = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n","export class Config {\r\n    \r\n    // CANVAS\r\n    CANVAS_WIDTH:         number = 800;\r\n    CANVAS_HEIGHT:        number = 600;\r\n    // MAP\r\n    TILE_SIZE:            number = 25;\r\n    // GAME\r\n    GAME_KILLS_TO_WIN:    number = 15;\r\n    GAME_MATCH_DURATION:  number = 300000; // in ms \r\n    GAME_BOTS_PER_MATCH:  number = 5;\r\n    GAME_RESPAWN_TIME:    number = 5000;   // in ms\r\n    GAME_MATCH_TYPE:      string = 'team'; // 'deathmatch'  // o team, ctf\r\n    WAYPOINTS_TIMING:     number = 8000;\r\n    // HUD\r\n    FONT_FAMILY:          string = '\"Segoe UI\",Arial,sans-serif';\r\n    HUD_BACKGROUND:       string = \"rgba(102, 136, 204, 0.5)\";\r\n    // PLAYER\r\n    PLAYER_SPEED:         number = 3.5/16;\r\n    PLAYER_RADIUS:        number = 12.5;\r\n    PLAYER_HP:            number = 100;\r\n    PLAYER_AP:            number = 100;\r\n    PLAYER_COLOUR_INSIDE: string = '#6688cc';\r\n    PLAYER_COLOUR_OUTSIDE: string = '#4b58a0';\r\n    PLAYER_RESPAWN:string[]=['#808080','#608feb','#7da1ea','#99b2e8','#b4c4ea','#cdd5ef','#e6e6fa']; // Crimson, red, yellow, lightyellow\r\n    // ENEMIES\r\n    ENEMY_SPEED:           number = 3.5/16;\r\n    ENEMY_RADIUS:          number = 12.5;\r\n    ENEMY_HP:              number = 100;\r\n    ENEMY_AP:              number = 100;\r\n    ENEMY_STARTING_WEAPON: string = 'rifle';\r\n    ENEMY_COLOUR_INSIDE:   string = '#f90c00';\r\n    ENEMY_COLOUR_OUTSIDE:  string = '#bb0b00';\r\n    ENEMY_NAMES:string[] = ['Ranger','Phobos','Mynx','Orbb','Sarge','Grunt','Hunter','Klesk','Slash','Anarki','Razor','Visor','Bones','Doom','Major','Xaero'],\r\n    ENEMY_RESPAWN:string[] = ['#ff0000','#eb0001','#d60002','#c40002','#b10002','#9d0002','#8b0000']; // from red to darkred\r\n    \r\n    MOTION_TRAILS_LENGTH:   number = 10;\r\n    // BULLETS\r\n    BULLET_RADIUS:number = 2.5;\r\n    BULLET_DAMAGE:number = 5;\r\n    BULLET_TTL:number = 1000;\r\n    // DETRITI\r\n    DEBRIS_COLOR:string[] = ['#800000','#812314','#823624','#814734','#7e5544','#796556','#727267']; // from maroon to #727267\r\n    DEBRIS_RADIUS:number = 3;\r\n    // SANGUE\r\n    BLOOD_COLOUR:string[] = ['#ff0000','#eb0001','#d60002','#c40002','#b10002','#9d0002','#8b0000']; // from red to darkred\r\n    BLOOD_RADIUS:number = 4;\r\n    // WEAPONS\r\n    FIRE_IN_LAVA:string[]=['#ffffe0','#fff1c4','#ffe2a5','#ffd587','#ffc667','#ffb541','#ffa500']; // lightyellow, orange, #FFA500\r\n    FIRE_EXPLOSION:string[]=['#808080','#ff6000','#ff8811','#ffab2b','#ffcb4b','#ffe878','#ffffe0']; // Crimson, red, yellow, lightyellow\r\n    // POWERUP\r\n    POWERUP_RADIUS:number = 6;\r\n    POWERUP_SPAWN_TIME:number = 30*1000;\r\n}\r\n\r\n/*\r\nPoteva essere usato anche una classe con proprietà statiche:\r\nhttps://medium.com/@haidermalik504/classes-in-typescript-ec5e75196201\r\n*/\r\n\r\n/*\r\n\r\n    For colors: http://gka.github.io/chroma.js/#cubehelix-hue\r\n    https://gka.github.io/palettes\r\n\r\n*/\r\n","export class Camera {\r\n\r\n    x:             number;\r\n    y:             number;\r\n    w:             number;\r\n    h:             number;\r\n    currentPlayer: any;\r\n    map:           any;\r\n    main:          any;\r\n    c:             any;\r\n\r\n    constructor() { \r\n    }\r\n\r\n    init(x: number, y: number, w: number, h: number, main:any){\r\n        this.x    = x || 0;\r\n        this.y    = y || 0;\r\n        this.w    = w || 800;\r\n        this.h    = h || 600;\r\n        this.currentPlayer = main.player;\r\n        this.main = main;\r\n        this.c = main.c;\r\n        this.map = main.currentMap;\r\n    }\r\n\r\n    // setta la telecamera sull'eventuale bot...\r\n    setCurrentPlayer(player:any){\r\n        this.currentPlayer = player;\r\n    }\r\n\r\n    update(dt:number, timestamp:number) {\r\n        // si evita di aggiornare la camera quando si arriva al bordo della mappa\r\n        if (this.currentPlayer.x > (this.w / 2) && this.currentPlayer.x < this.map.mapSize.w - (this.w / 2)) {\r\n            this.x = this.currentPlayer.x - (this.w / 2);\r\n        }\r\n        if (this.currentPlayer.y > (this.h / 2) && this.currentPlayer.y < this.map.mapSize.h - (this.h / 2)) {\r\n            this.y = this.currentPlayer.y - (this.h / 2);\r\n        }\r\n    }\r\n\r\n    // adjust camera after respawn\r\n    adjustCamera(actor:any){\r\n\t\tif(actor.x > (this.map.mapSize.w - this.c.CANVAS_WIDTH)){\r\n            this.x = this.map.mapSize.w - this.c.CANVAS_WIDTH;\r\n\t\t}\r\n\t\tif(actor.x < this.c.CANVAS_WIDTH){\r\n            this.x = 0;\r\n\t\t}\r\n\t\tif(actor.y < this.c.CANVAS_HEIGHT){\r\n\t\t\tthis.y = 0;\r\n\t\t}\r\n\t\tif(actor.y > (this.map.mapSize.h - this.c.CANVAS_HEIGHT)){\r\n            this.y = this.map.mapSize.h - this.c.CANVAS_HEIGHT;\r\n        }\r\n\t}\r\n\r\n};","export const demoMap2 = [\r\n    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,25,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1],\r\n    [1,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1],\r\n    [1,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,11,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1],\r\n    [1,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,2,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,10,0,0,0,10,0,40,0,10,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,3,3,3,3,3,1],\r\n    [1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,10,0,40,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,0,0,0,0,40,0,0,0,0,3,3,3,3,3,1],\r\n    [1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,1,1,0,0,27,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,27,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,10,0,0,0,0,40,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,10,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,,1,1,1,1,1,1],\r\n    [1,0,10,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,,1,1,1,1,1,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,29,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,10,0,0,1,1,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,10,0,40,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,1,1,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,12,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,2,0,1,1,0,0,0,0,1,1,1,0,0,0,0,40,0,0,0,0,0,1,1,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,10,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,10,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,1],\r\n    [1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,29,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,10,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,12,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,40,0,0,0,0,0,0,34,0,0,0,0,0,0,40,0,0,0,0,0,1,1,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1],\r\n    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,24,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,1,1,0,0,2,0,0,0,0,0,0,40,0,0,1,1,0,0,0,0,15,0,0,0,0,0,1,1,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,1,0,0,2,0,0,0,0,0,40,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1],\r\n    [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,1,1,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n    [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n    [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,1,1,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n    [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n    [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,1,1,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n    [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n    [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 ]\r\n];","import { demoMap } from './maps/dm0';\r\nimport { demoMap2 } from './maps/dm1';\r\n\r\n\r\n\r\nexport const types = [\r\n    { id: 0, colour: '#ddd5d5', solid: 0 },                                   // tile navigabile\r\n    { id: 1, colour: '#868679', solid: 1 }\r\n    \r\n    /*// tile solida\r\n    // ENVIRONMENT\r\n    { id: 2, colour: '#ddd5d5', solid: 0, desc: 'SPAWN' },                            // spawn points\r\n    { id: 3, colour: '#ddd5d5', solid: 0, desc: 'lava', damage: 1 },                  // lava\r\n    { id: 4, colour: '#ddd5d5', solid: 0, desc: 'toxic water', damage: 1 },           // toxic water\r\n    { id: 5, colour: '#ddd5d5', solid: 0, desc: 'water', friction: 1 },               //  water\r\n    { id: 6, colour: '#ddd5d5', solid: 0, desc: 'portals', destination: {r:1,c:2} },  // portals\r\n    { id: 7, colour: '#ddd5d5', solid: 0, desc: 'bounce pad', force: {x:1,y:2} },     // piattaforme di jump\r\n    // POWERUPS\r\n    { id: 10, colour: '#ddd5d5', solid: 0, desc: 'health' },     \r\n    { id: 11, colour: '#ddd5d5', solid: 0, desc: 'megaHealth' },     \r\n    { id: 12, colour: '#ddd5d5', solid: 0, desc: 'armour' },     \r\n    { id: 13, colour: '#ddd5d5', solid: 0, desc: 'megaArmour' },     // a tempo\r\n    { id: 14, colour: '#ddd5d5', solid: 0, desc: 'quad damage' },    // a tempo  \r\n    { id: 15, colour: '#ddd5d5', solid: 0, desc: 'speed' },          // a tempo\r\n    { id: 15, colour: '#ddd5d5', solid: 0, desc: 'regeneration' },   // a tempo   \r\n    // WEAPONS AMMO\r\n    { id: 23, colour: '#ddd5d5', solid: 0, desc: 'ammo for Machine Gun/Rifle' },\r\n    { id: 24, colour: '#ddd5d5', solid: 0, desc: 'ammo for Shotgun' },     \r\n    { id: 25, colour: '#ddd5d5', solid: 0, desc: 'ammo for Plasma Gun' },     \r\n    { id: 26, colour: '#ddd5d5', solid: 0, desc: 'ammo for ' },     \r\n    { id: 27, colour: '#ddd5d5', solid: 0, desc: 'ammo for Rocket Launcher' },     \r\n    { id: 28, colour: '#ddd5d5', solid: 0, desc: 'ammo for Lightning Gun' },     \r\n    { id: 29, colour: '#ddd5d5', solid: 0, desc: 'ammo for Railgun' },     \r\n    // WEAPONS\r\n    { id: 33, colour: '#ddd5d5', solid: 0, desc: 'Machine Gun' },\r\n    { id: 34, colour: '#ddd5d5', solid: 0, desc: 'Shotgun' },     \r\n    { id: 35, colour: '#ddd5d5', solid: 0, desc: 'Plasma Gun' },     \r\n    { id: 36, colour: '#ddd5d5', solid: 0, desc: 'Grenade Launcher' },     \r\n    { id: 37, colour: '#ddd5d5', solid: 0, desc: 'Rocket Launcher' },     \r\n    { id: 38, colour: '#ddd5d5', solid: 0, desc: 'Lightning Gun' },     \r\n    { id: 39, colour: '#ddd5d5', solid: 0, desc: 'Railgun' }\r\n    \r\n    */\r\n];\r\n\r\nexport class Map {\r\n\r\n    tileSize:          number;\r\n    mapSize:           any;\r\n    camera:            any;\r\n    powerup:           any;\r\n    main:              any;\r\n    c:                 any;\r\n    ctx:               any;\r\n    map:               any;\r\n\r\n    constructor() { }\r\n\r\n    init(main: any){\r\n        this.camera   = main.camera;\r\n        this.main     = main;\r\n        this.c        = main.c;\r\n        this.tileSize = this.c.TILE_SIZE;\r\n        this.powerup  = main.powerup;\r\n        this.ctx      = main.ctx;\r\n        this.map      = demoMap2;\r\n        // dimensioni in pixels\r\n        this.mapSize = {\r\n            h:         (this.map.length * this.tileSize),\r\n            w:         (this.map[0].length * this.tileSize),\r\n        }\r\n        console.log(`Mappa: ${this.mapSize.w} x ${this.mapSize.h} pixel, Righe: ${this.map.length} - Colonne:${this.map[0].length} `);\r\n    }\r\n\r\n    drawBorder(xPos: number, yPos: number, width: number, height: number, thickness = 1) {\r\n        this.ctx.fillStyle = 'white';\r\n        this.ctx.fillRect(xPos - (thickness), yPos - (thickness), width + (thickness * 2), height + (thickness * 2));\r\n    }\r\n\r\n    render() {\r\n        var onXTile = Math.floor((this.camera.x + (this.camera.w / 2)) / this.tileSize);\r\n        var onYTile = Math.floor((this.camera.y + (this.camera.h / 2)) / this.tileSize);\r\n        this.ctx.beginPath();\r\n\r\n        for (let j = onYTile - 13; j < onYTile + 13; j++) { // sono 24 righe\r\n            for (let l = onXTile - 17; l < onXTile + 17; l++) { // sono 32 colonne\r\n                if (j >= 0 && l >= 0 && j < this.map.length && l < this.map[j].length) {\r\n\r\n                    // if (this.map[j][l] !== 1 || this.map[j][l] !== 3 || this.map[j][l] !== 4) {\r\n                    //     this.drawBorder(l * this.tileSize - this.camera.x, j * this.tileSize - this.camera.y, this.tileSize, this.tileSize);\r\n                    // }\r\n\r\n                    // si renderizza relativamente alla camera !!!\r\n                    this.ctx.fillStyle = this.getColor(this.map[j][l]);\r\n                    this.ctx.fillRect(l * this.tileSize - this.camera.x, j * this.tileSize - this.camera.y, this.tileSize, this.tileSize);\r\n\r\n                    if (this.main.debug) {\r\n                        this.ctx.font = 'bold 8px/1 Arial';\r\n                        this.ctx.fillStyle = '#494242';\r\n                        this.ctx.fillText(j.toString(), l * this.tileSize - this.camera.x + 2, j * this.tileSize - this.camera.y + 10);\r\n                        this.ctx.fillText(l.toString(), l * this.tileSize - this.camera.x + 2, j * this.tileSize - this.camera.y + 20);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getColor(tile: any){\r\n        let color;\r\n        switch (tile) {\r\n            case 0:  color = 'LightSteelBlue';break;    // empty\r\n            case 1:  color = 'SlateGray';break;         // solid\r\n            case 3:  color = 'red';break;               // lava\r\n            case 4:  color = 'green';break;             // toxic water\r\n            default: color = 'LightSteelBlue';break; \r\n        }\r\n        return color;\r\n    }\r\n\r\n    pixelToMapPos(pos) {\r\n        return {\r\n          x: Math.floor(pos.x / this.tileSize),\r\n          y: Math.floor(pos.y / this.tileSize)\r\n        };\r\n      }\r\n    \r\n      mapToPixelPos(mapPos) {\r\n        return {\r\n          x: mapPos.x * this.tileSize,\r\n          y: mapPos.y * this.tileSize\r\n        };\r\n      }\r\n    \r\n\r\n\r\n    loadSpawnPointsAndPowerUps() {\r\n        let output = {};\r\n        output.spawn =[]; \r\n        output.powerup =[];\r\n        output.waypoints =[];\r\n        for (let j = 0; j < this.map.length; j++) {\r\n            for (let l = 0; l < this.map[j].length; l++) {\r\n                if (j >= 0 && l >= 0 && j < this.map.length && l < this.map[j].length) {\r\n                    if (this.map[j][l] == 2) {\r\n                        output.spawn.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5\r\n                        });\r\n                    }\r\n\r\n                    // POWERUPS\r\n                    if (this.map[j][l] == 10) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'health'\r\n                        });\r\n                    }\r\n                    if (this.map[j][l] == 11) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'megaHealth'\r\n                        });\r\n                    }\r\n                    if (this.map[j][l] == 12) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'armour'\r\n                        });\r\n                    }\r\n                    if (this.map[j][l] == 13) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'megaArmour'\r\n                        });\r\n                    }\r\n                    if (this.map[j][l] == 14) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'quad'\r\n                        });\r\n                    }\r\n                    if (this.map[j][l] == 15) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'speed'\r\n                        });\r\n                    }\r\n\r\n                    /* --------------------- WEAPONS --------------------- */\r\n                    if (this.map[j][l] == 34) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'weaponShotgun',\r\n                            for:'Shotgun',\r\n                            amount:25\r\n                        });\r\n                    }\r\n                    if (this.map[j][l] == 35) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'weaponPlasma',\r\n                            for:'Plasma',\r\n                            amount:25\r\n                        });\r\n                    }\r\n                    if (this.map[j][l] == 37) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'weaponRocket',\r\n                            for:'Rocket',\r\n                            amount:10\r\n                        });\r\n                    }\r\n                    if (this.map[j][l] == 39) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'weaponRailgun',\r\n                            for:'Railgun',\r\n                            amount:5\r\n                        });\r\n                    }\r\n\r\n\r\n                    /* --------------------- AMMO --------------------- */\r\n                    if (this.map[j][l] == 23) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'ammoRifle',\r\n                            for:'Rifle'\r\n                        });\r\n                    }\r\n                    if (this.map[j][l] == 24) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'ammoShotgun',\r\n                            for:'Shotgun',\r\n                            amount:25\r\n                        });\r\n                    }\r\n                    if (this.map[j][l] == 25) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'ammoPlasma',\r\n                            for:'Plasma',\r\n                            amount:25\r\n                        });\r\n                    }\r\n                    if (this.map[j][l] == 27) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'ammoRocket',\r\n                            for:'Rocket',\r\n                            amount:10\r\n                        });\r\n                    }\r\n                    if (this.map[j][l] == 29) {\r\n                        output.powerup.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'ammoRailgun',\r\n                            for:'Railgun',\r\n                            amount:5\r\n                        });\r\n                    }\r\n\r\n                    // WAYPOINTS\r\n                    if (this.map[j][l] == 40) {\r\n                        output.waypoints.push({\r\n                            x: l * this.tileSize - this.camera.x + 12.5,\r\n                            y: j * this.tileSize - this.camera.y + 12.5,\r\n                            type: 'waypoint'\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // console.log(output);\r\n        return output\r\n    }\r\n\r\n}","import { Helper } from '../helper';\r\n\r\nexport class BulletHandler {\r\n\r\n    list: any[] = [];\r\n    pool: any[] = []\r\n\r\n    main:       any;\r\n    c:          any;\r\n    player:     any;\r\n    enemy:      any;\r\n    map:        any;\r\n    particelle: any;\r\n    blood:      any;\r\n\r\n\r\n    constructor() { }\r\n\r\n    init(main: any) {\r\n        this.list.length = 0;\r\n        this.main        = main;\r\n        this.c           = main.c;\r\n        this.player      = main.player;\r\n        this.enemy       = main.enemy;\r\n        this.particelle  = main.particelle;\r\n        this.map         = main.currentMap;\r\n        this.blood       = main.blood;\r\n    }\r\n\r\n    myCheckCollision(shot: any, map: any) {\r\n        if (shot.x - shot.old_x > 0 && map[Math.floor(shot.y / this.c.TILE_SIZE)][Math.floor((shot.x + this.c.BULLET_RADIUS) / this.c.TILE_SIZE)] == 1) {\r\n            shot.x = shot.old_x;\r\n            return true;\r\n        }\r\n        if (shot.x - shot.old_x > 0 && map[Math.floor(shot.y / this.c.TILE_SIZE)][Math.floor((shot.x - this.c.BULLET_RADIUS) / this.c.TILE_SIZE)] == 1) {\r\n            shot.x = shot.old_x;\r\n            return true;\r\n        }\r\n        if (shot.y + shot.old_y > 0 && map[Math.floor((shot.y + this.c.BULLET_RADIUS) / this.c.TILE_SIZE)][Math.floor(shot.x / this.c.TILE_SIZE)] == 1) {\r\n            shot.y = shot.old_y;\r\n            return true;\r\n        }\r\n        if (shot.y + shot.old_y < 0 && map[Math.floor((shot.y - this.c.BULLET_RADIUS) / this.c.TILE_SIZE)][Math.floor(shot.x / this.c.TILE_SIZE)] == 1) {\r\n            shot.y = shot.old_y;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    doExplosion(shot:any){\r\n        let magnitude = 3;\r\n        // let type =Object.assign(shot.type,{r:this.c.TILE_SIZE*1.5})\r\n        // si crea uno shot che verrà analizzato nel prossimo update() avente il raggio dell'esplosione\r\n        // this.create( shot.x, shot.y, 0, 0, shot.firedBy, shot.index, 50, type)\r\n        for (let b = 0; b < 50; b++) {\r\n            //this.main.particelle.create(shot.x, shot.y, Math.random() * magnitude - magnitude, Math.random() * magnitude - magnitude, Helper.randf(this.c.DEBRIS_RADIUS, 20), Helper.randomElementInArray(this.c.FIRE_EXPLOSION))\r\n            this.main.particelle.create(shot.x, shot.y, Math.random() * magnitude - 1, Math.random() * magnitude - 1, Helper.randf(this.c.DEBRIS_RADIUS, 20), Helper.randomElementInArray(this.c.FIRE_EXPLOSION));\r\n        }\r\n    }\r\n\r\n    calculateHealth(actor:any, damage:number){\r\n        if(actor.ap>0){\r\n            actor.ap -= damage;\r\n            let what = actor.ap;\r\n            if(what<0){\r\n                actor.hp += what;\r\n            }\r\n        }else{\r\n            actor.ap = 0;\r\n            actor.hp -= damage;\r\n        }\r\n    }\r\n\r\n    update(dt: number,timestamp:number) {\r\n        let shot, i;\r\n        for (i = this.list.length - 1; i >= 0; i--) {\r\n            shot = this.list[i];\r\n            shot.old_x = shot.x;\r\n            shot.old_y = shot.y;\r\n            shot.x += shot.vX;\r\n            shot.y += shot.vY;\r\n\r\n            shot.angleForDinamicRadius += 2*Math.PI/30;  // animazione del raggio dinamico di 36° a frame\r\n\r\n            // collisione con i muri\r\n            if (this.myCheckCollision(shot, this.map.map)) {\r\n                // TODO: la velocità deve invertire su un solo asse quella del bullet...\r\n                this.main.particelle.create(shot.x, shot.y, Math.random() * shot.vX / 3.5, Math.random() * shot.vY / 3.5, this.c.DEBRIS_RADIUS)\r\n                if(shot.explode){\r\n                    this.doExplosion(shot);\r\n                }\r\n                this.pool.push(shot);\r\n                this.list.splice(i, 1);\r\n                continue\r\n            }\r\n            \r\n            // bullet sparati da bot a bot (non il player... chiSparaTarget.index!=100 )\r\n            let chiSpara = this.enemy.list[shot.index];\r\n            if (chiSpara) {\r\n                let chiSparaTarget = chiSpara.target || {};\r\n                if (shot.index == chiSpara.index && chiSparaTarget.alive && chiSparaTarget.index!=100 && Helper.circleCollision(shot, chiSparaTarget)) {\r\n                    if(shot.explode){\r\n                        this.doExplosion(shot);\r\n                    }\r\n                    //chiSparaTarget.hp -= shot.damage;\r\n                    this.calculateHealth(chiSparaTarget,shot.damage);\r\n                    this.blood.create(shot.x, shot.y, Math.random() * 4 - 4, Math.random() * 4 - 4, this.c.BLOOD_RADIUS) // crea il sangue\r\n                    this.pool.push(shot);\r\n                    this.list.splice(i, 1);\r\n                    if (chiSparaTarget.hp <= 0) {\r\n                        chiSparaTarget.alive = false;\r\n                        chiSparaTarget.numberOfDeaths++;\r\n                        for (let b = 0; b < 36; b++) {\r\n                            this.blood.create(shot.x, shot.y, Math.random() * 4 - 2, Math.random() * 4 - 2, this.c.BLOOD_RADIUS) // crea il sangue\r\n                        }\r\n                        this.enemy.list[shot.index].kills++;    // si aumenta lo score del bot che ha sparato il proiettile\r\n                        console.log(`BOT ${chiSpara.index} killed BOT ${chiSparaTarget.index}`);\r\n                        setTimeout(() => {\r\n                            this.enemy.respawn(chiSparaTarget);\r\n                        }, this.c.GAME_RESPAWN_TIME);\r\n                    }\r\n                    this.pool.push(shot);\r\n                    this.list.splice(i, 1);\r\n                    continue\r\n                }\r\n            }\r\n\r\n\r\n            // si guarda se i proiettili di qualche nemico impattano il player\r\n            if (shot.firedBy == 'enemy' && this.player.alive && Helper.circleCollision(shot, this.player)) {\r\n                if(shot.explode){\r\n                    this.doExplosion(shot);\r\n                }\r\n                if(!this.player.godMode){\r\n                    //this.player.hp -= shot.damage;\r\n                    this.calculateHealth(this.player,shot.damage);\r\n                }\r\n                this.blood.create(shot.x, shot.y, Math.random() * 2 - 2, Math.random() * 2 - 2, this.c.BLOOD_RADIUS) // crea il sangue\r\n                this.pool.push(shot);\r\n                this.list.splice(i, 1);\r\n                if (this.player.hp <= 0) {\r\n                    this.player.alive = false;\r\n                    this.player.numberOfDeaths++;\r\n                    for (let b = 0; b < 36; b++) {\r\n                        this.blood.create(shot.x, shot.y, Math.random() * 4 - 2, Math.random() * 4 - 2, this.c.BLOOD_RADIUS) // crea il sangue\r\n                    }\r\n                    this.enemy.list[shot.index].kills++;    // si aumenta lo score del bot che ha sparato il proiettile\r\n                    let currentActorInCamera = this.enemy.list[shot.index];\r\n                    this.main.camera.setCurrentPlayer(currentActorInCamera);\r\n                    this.main.camera.adjustCamera(currentActorInCamera);\r\n                    // setTimeout(() =>this.player.respawn(), this.c.GAME_RESPAWN_TIME);\r\n                    console.log(`BOT ${shot.index} killed Player ${this.player.index}.`);\r\n                }\r\n                this.pool.push(shot);\r\n                this.list.splice(i, 1);\r\n                continue\r\n            }\r\n\r\n            // si guarda se i proiettili del player impattano qualche nemico\r\n            for (let i = this.enemy.list.length - 1; i >= 0; i--) {\r\n                const bot = this.enemy.list[i];\r\n                if (shot.firedBy == 'player' && bot.alive && Helper.circleCollision(shot, bot)) {\r\n                    if(shot.explode){\r\n                        this.doExplosion(shot);\r\n                    }\r\n                    //bot.hp -= shot.damage;\r\n                    this.calculateHealth(bot,shot.damage);\r\n                    this.blood.create(shot.x, shot.y, Math.random() * 2 - 2, Math.random() * 2 - 2, this.c.BLOOD_RADIUS) // crea il sangue\r\n                    if (bot.hp <= 0) {\r\n                        bot.alive = false;\r\n                        this.player.kills++;\r\n                        bot.numberOfDeaths++;\r\n                        for (let b = 0; b < 36; b++) {\r\n                            this.blood.create(shot.x, shot.y, Math.random() * 4 - 2, Math.random() * 4 - 2, this.c.BLOOD_RADIUS) // crea il sangue\r\n                        }\r\n                        console.log(`PLayer killed BOT ${bot.index}.`);\r\n                        setTimeout(() => {\r\n                            this.enemy.respawn(bot);\r\n                        }, this.c.GAME_RESPAWN_TIME);\r\n                        this.main.fragMessage = `You fragged ${bot.name} ${this.calculateRanking()} place with ${this.player.kills}`;\r\n                    }\r\n                    this.pool.push(shot);\r\n                    this.list.splice(i, 1);\r\n                    continue\r\n                }\r\n            }\r\n\r\n            // diverse visualizzazioni proiettili\r\n            if(shot.type.name=='Plasma'){\r\n                shot.r =1 + Math.abs(Math.sin(shot.angleForDinamicRadius))*5;\r\n            }\r\n            if(shot.type.name=='Railgun'){\r\n                let amplitude = 8; // in px\r\n                let beta = timestamp + Math.PI / 2;\r\n                let p1:any ={};\r\n                let p2:any ={};\r\n                p1.x = shot.x + Math.cos(beta) * amplitude;\r\n                p1.y = shot.y + Math.sin(beta) * amplitude;\r\n                p2.x = shot.x + Math.cos(beta) * amplitude;\r\n                p2.y = shot.y + Math.sin(beta) * amplitude;\r\n                this.main.particelle.create(p1.x, p1.y, 0, 0, 3, shot.color);\r\n                this.main.particelle.create(p2.x, p2.y, 0, 0, 3, shot.color);\r\n            }\r\n            if (shot.type.name == 'Rocket') {\r\n                let amplitude = 2; // in px\r\n                let beta = timestamp + Math.PI / 2;\r\n                for (let i = 0; i < 2; i++) {\r\n                    let scia: any = {};\r\n                    scia.x = shot.x + Math.cos(beta) * amplitude;\r\n                    scia.y = shot.y + Math.sin(beta) * amplitude;\r\n                    this.main.particelle.create(scia.x, scia.y, 0, 0, 3, Helper.randomElementInArray(this.c.FIRE_EXPLOSION));\r\n                }\r\n            }\r\n            // decremento del proiettile\r\n            shot.ttl -= dt;\r\n            if (shot.ttl <= 0) {\r\n                this.pool.push(shot);\r\n                this.list.splice(i, 1);\r\n                continue\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateRanking(){\r\n        let index;\r\n        this.main.actors = this.main.actors.sort((obj1:any, obj2:any) =>obj2.kills - obj1.kills);\r\n        for (let i = 0; i < this.main.actors.length; i++) {\r\n            const element = this.main.actors[i];\r\n            if(element.index==100){\r\n                index=i;\r\n                break;\r\n            }\r\n        }\r\n        let output;\r\n        switch (index) {\r\n            case 0: output ='1st'; break;\r\n            case 1: output ='2nd'; break;\r\n            case 2: output ='3rd'; break;\r\n            case 3: output ='4th'; break;\r\n            case 4: output ='5th'; break;\r\n            case 5: output ='6th'; break;\r\n            case 6: output ='7th'; break;\r\n            case 7: output ='0th'; break;\r\n            default:break;\r\n        }\r\n        return output;\r\n    }\r\n\r\n    render() {\r\n        for (let j = this.list.length - 1; j >= 0; j--) {\r\n            const shot = this.list[j];\r\n            let x = shot.x - this.main.camera.x;\r\n            let y = shot.y - this.main.camera.y;\r\n            this.main.ctx.beginPath();\r\n            this.main.ctx.arc(x, y, shot.r, 0, 6.2832);\r\n            if(shot.type.name=='Flamer'){\r\n                this.main.ctx.fillStyle = Helper.randomElementInArray(this.c.FIRE_EXPLOSION); \r\n            } else{\r\n                this.main.ctx.fillStyle = shot.color; // 'rgba(0,0,0,0.66)';\r\n            }\r\n            this.main.ctx.fill();\r\n            this.main.ctx.closePath()\r\n        }\r\n    }\r\n\r\n    create(x: number, y: number, vX: number, vY: number, firedBy: string, index: number, damage:number, type?: any) {\r\n        let shot = /* this.pool.length > 0 ? this.pool.pop() : */ {};\r\n        shot.old_x   = x;\r\n        shot.x       = x;\r\n        shot.old_y   = y;\r\n        shot.y       = y;\r\n        shot.index   = index;   // è l'id del \r\n        shot.firedBy = firedBy; // indica da chi è sparato il colpo ( player, enemy )\r\n        shot.type    = type;\r\n        if(shot.type.name=='Plasma'){\r\n            shot.angleForDinamicRadius = 0;\r\n        }\r\n        shot.vX  = vX * type.speed + Math.random() * type.spread * 2 - type.spread;\r\n        shot.vY  = vY  * type.speed + Math.random() * type.spread * 2 - type.spread;\r\n        \r\n        shot.r       = type.r;\r\n        shot.ttl     = type.ttl;\r\n        shot.color   = type.color;\r\n        shot.damage  = damage ? damage * type.damage: type.damage;\r\n        shot.explode = type.explode;\r\n        this.list.push(shot);\r\n    }\r\n\r\n}\r\n\r\n","import {Helper} from'../helper';\r\n\r\nexport class Particelle {\r\n    list: any[];\r\n    pool: any[];\r\n    main: any;\r\n    c:    any;\r\n\r\n    constructor () {\r\n       \r\n    }\r\n\r\n    init(main:any){\r\n        this.list = [];\r\n        this.pool = [];\r\n        this.main = main;\r\n        this.c    = main.c;\r\n    }\r\n\r\n    /**\r\n     * Invocata con:\r\n     * this.debrisHandler.create(shot.x, shot.y, Math.random() * 2 - 1, Math.random() * 2 - 1, 3)\r\n     * @param {*} x coordinata x del detrito\r\n     * @param {*} y coordinata y del detrito\r\n     * @param {*} vX    veocità x\r\n     * @param {*} vY    velocità y\r\n     * @param {*} r raggio del detrito (default =3)\r\n     * @memberof Particelle\r\n     */\r\n    create (x:number, y:number, vX:number, vY:number, r: any=3, color?:string) {\r\n        var obj = this.pool.length > 0 ? this.pool.pop() : new Object();\r\n        obj.x  = x;\r\n        obj.y  = y;\r\n        obj.vX = vX;\r\n        obj.vY = vY;\r\n        obj.r  = r;\r\n        obj.color = color;\r\n        this.list.push(obj)\r\n    };\r\n\r\n    update (dt:number, timestamp:number) {\r\n        if (this.list.length > 0) {\r\n            var obj;\r\n            for (var i = this.list.length - 1; i >= 0; i--) {\r\n                obj = this.list[i];\r\n                obj.x += - obj.vX; // si inverte il segno\r\n                obj.y += - obj.vY;   // si inverte il segno\r\n                obj.vX *= 0.97;\r\n                obj.vY *= 0.97;\r\n                obj.r -= 0.1;\r\n                if (obj.r <= 0) {\r\n                    this.pool.push(obj);\r\n                    this.list.splice(i, 1);\r\n                    continue\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        for (var i = this.list.length - 1; i >= 0; i--) {\r\n            var detrito = this.list[i];\r\n            let x = detrito.x - this.main.camera.x;\r\n            let y = detrito.y - this.main.camera.y;\r\n            this.main.ctx.beginPath();\r\n                    this.main.ctx.arc(x, y, detrito.r, 0, 6.2832);\r\n                    this.main.ctx.fillStyle =  detrito.color || Helper.randomElementInArray(this.c.DEBRIS_COLOR);\r\n                    this.main.ctx.fill();\r\n                    this.main.ctx.closePath()\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import {Helper} from'../helper';\r\n\r\nexport class Blood {\r\n    list: any[];\r\n    pool: any[];\r\n    main: any;\r\n    c:    any;\r\n\r\n    constructor () {\r\n    }\r\n\r\n    init(main:any){\r\n        this.list = [];\r\n        this.pool = [];\r\n        this.main = main;\r\n        this.c    = main.c; \r\n    }\r\n\r\n    update (dt: number, timestamp:number) {\r\n        if (this.list.length > 0) {\r\n            var obj;\r\n            for (var i = this.list.length - 1; i >= 0; i--) {\r\n                obj = this.list[i];\r\n                obj.x += -obj.vX;\r\n                obj.y += -obj.vY;\r\n                obj.vX *= 0.96;\r\n                obj.vY *= 0.96;\r\n                obj.radius -= 0.1;\r\n                if (obj.radius <= 0) {\r\n                    this.pool.push(obj);\r\n                    this.list.splice(i, 1);\r\n                    continue\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Invocata con:\r\n     *  this.blood(shot.x, shot.y, shot.vX * 0.4, shot.vY * 0.4, 4) // crea il sangue\r\n     * @param {*} x coordinata x della particella di sangue\r\n     * @param {*} y coordinata y della particella di sangue\r\n     * @param {*} vX    veocità x\r\n     * @param {*} vY    velocità y\r\n     * @param {*} radius raggio della particella di sangue (default =3)\r\n     */\r\n    create (x:number, y:number, vX:number, vY:number, radius: any=3) {\r\n        var obj = this.pool.length > 0 ? this.pool.pop() : new Object();\r\n        obj.x  = x;\r\n        obj.y  = y;\r\n        obj.vX = vX;\r\n        obj.vY = vY;\r\n        obj.radius = radius;\r\n        this.list.push(obj)\r\n    };\r\n\r\n    render(){\r\n        for (var i = this.list.length - 1; i >= 0; i--) {\r\n            var sangue = this.list[i];\r\n            let x = sangue.x - this.main.camera.x;\r\n            let y = sangue.y - this.main.camera.y;\r\n            this.main.ctx.beginPath();\r\n                    this.main.ctx.arc(x, y, sangue.radius, 0, 6.2832);\r\n                    this.main.ctx.fillStyle = Helper.randomElementInArray(this.c.BLOOD_COLOUR) ;\r\n                    this.main.ctx.fill();\r\n                    this.main.ctx.closePath()\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import { Helper } from '../helper';\r\n\r\nexport class Waypoints {\r\n\r\n    list: any[] = [];\r\n    pool: any[] = [];\r\n\r\n    player:     any;\r\n    bots:       any;\r\n    ctx:        any;\r\n    main:       any;\r\n    c:          any;\r\n\r\n    constructor() { \r\n    }\r\n\r\n    init(main: any){\r\n        this.list = [];\r\n        this.main       = main;\r\n        this.c          = main.c;\r\n        this.player     = main.player;\r\n        this.bots       = main.enemy;\r\n        this.ctx        = main.ctx;\r\n    }\r\n\r\n    // ogni waypoint ha un riferimento di ogni bot per essere attraverasabile\r\n    linkToActors() {\r\n        this.list.forEach(e => {\r\n            this.bots.list.forEach((bot: any) => {\r\n                e[bot.index] = { visible: true, reloadRate: 0 };\r\n            });\r\n        });\r\n    }\r\n\r\n    create(x: number, y: number, index:number) {\r\n        let waypoint        = this.pool.length > 0 ? this.pool.pop(): new Object();\r\n        waypoint.type       = 'waypoint';\r\n        waypoint.index      = index;\r\n        waypoint.x          = x;\r\n        waypoint.y          = y;\r\n        waypoint.reloadRate = 0;\r\n        waypoint.spawnTime  = this.c.WAYPOINTS_TIMING;   // tempo necessario per essere nuovamente attraverabili da ogni bot\r\n        waypoint.r          = 3;  \r\n        waypoint.color      = 'orange';\r\n        this.list.push(waypoint);\r\n    };\r\n\r\n\r\n    update(dt:number, timestamp:number) {\r\n        for (var i = this.list.length - 1; i >= 0; i--) {\r\n            var waypoint = this.list[i];\r\n            \r\n            // si guarda se i waypoint entrano in contatto con qualche nemico\r\n            for (let i = this.bots.list.length - 1; i >= 0; i--) {\r\n                const bot = this.bots.list[i];\r\n                if (waypoint[bot.index].visible && Helper.circleCollision(waypoint, bot)) {\r\n                    waypoint[bot.index].visible = false;\r\n                }\r\n            }\r\n\r\n            // contatori di visibilità\r\n            for (let a = 0; a < this.bots.list.length; a++) {\r\n                const actor = this.bots.list[a];\r\n                if (!waypoint[actor.index].visible) {\r\n                    waypoint[actor.index].reloadRate+= dt;  // si inizia a contare se non visibile\r\n                }\r\n            }\r\n\r\n            // RESPAWN\r\n            for (let a = 0; a < this.bots.list.length; a++) {\r\n                const actor = this.bots.list[a];\r\n                if (waypoint[actor.index].reloadRate > waypoint.spawnTime) {\t// numero di cicli oltre il quale è nuovamente visibile\r\n                    waypoint[actor.index].visible = true;\r\n                    waypoint[actor.index].reloadRate = 0;\r\n                } \r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.main.debug) {\r\n            for (let i = this.list.length - 1; i >= 0; i--) {\r\n                let waypoint = this.list[i];\r\n                //if (waypoint.visible) {\r\n                // centro pulsante\r\n                let x = waypoint.x - this.main.camera.x;\r\n                let y = waypoint.y - this.main.camera.y;\r\n                this.ctx.beginPath();\r\n                this.ctx.arc(x, y, waypoint.r, 0, 6.2832);\r\n                this.ctx.fillStyle = waypoint.color;\r\n                this.ctx.fill();\r\n                this.ctx.closePath()\r\n\r\n                this.ctx.font = 'bold 8px/1 Arial';\r\n                this.ctx.fillStyle = 'black';\r\n                this.ctx.fillText(waypoint.index.toString(), waypoint.x - this.main.camera.x - 6, waypoint.y - this.main.camera.y - 12);\r\n                //}\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\n * Represents a single instance of EasyStar.\n * A path that is in the queue to eventually be found.\n */\nmodule.exports = function() {\n    this.pointsToAvoid = {};\n    this.startX;\n    this.callback;\n    this.startY;\n    this.endX;\n    this.endY;\n    this.nodeHash = {};\n    this.openList;\n};","/**\n* A simple Node that represents a single tile on the grid.\n* @param {Object} parent The parent node.\n* @param {Number} x The x position on the grid.\n* @param {Number} y The y position on the grid.\n* @param {Number} costSoFar How far this node is in moves*cost from the start.\n* @param {Number} simpleDistanceToTarget Manhatten distance to the end point.\n**/\nmodule.exports = function(parent, x, y, costSoFar, simpleDistanceToTarget) {\n    this.parent = parent;\n    this.x = x;\n    this.y = y;\n    this.costSoFar = costSoFar;\n    this.simpleDistanceToTarget = simpleDistanceToTarget;\n\n    /**\n    * @return {Number} Best guess distance of a cost using this node.\n    **/\n    this.bestGuessDistance = function() {\n        return this.costSoFar + this.simpleDistanceToTarget;\n    }\n};","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","module.exports = require('./lib/heap');\n","/**\n*   EasyStar.js\n*   github.com/prettymuchbryce/EasyStarJS\n*   Licensed under the MIT license.\n*\n*   Implementation By Bryce Neal (@prettymuchbryce)\n**/\n\nvar EasyStar = {}\nvar Instance = require('./instance');\nvar Node = require('./node');\nvar Heap = require('heap');\n\nconst CLOSED_LIST = 0;\nconst OPEN_LIST = 1;\n\nmodule.exports = EasyStar;\n\nvar nextInstanceId = 1;\n\nEasyStar.js = function() {\n    var STRAIGHT_COST = 1.0;\n    var DIAGONAL_COST = 1.4;\n    var syncEnabled = false;\n    var pointsToAvoid = {};\n    var collisionGrid;\n    var costMap = {};\n    var pointsToCost = {};\n    var directionalConditions = {};\n    var allowCornerCutting = true;\n    var iterationsSoFar;\n    var instances = {};\n    var instanceQueue = [];\n    var iterationsPerCalculation = Number.MAX_VALUE;\n    var acceptableTiles;\n    var diagonalsEnabled = false;\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array|Number} tiles An array of numbers that represent\n    * which tiles in your grid should be considered\n    * acceptable, or \"walkable\".\n    **/\n    this.setAcceptableTiles = function(tiles) {\n        if (tiles instanceof Array) {\n            // Array\n            acceptableTiles = tiles;\n        } else if (!isNaN(parseFloat(tiles)) && isFinite(tiles)) {\n            // Number\n            acceptableTiles = [tiles];\n        }\n    };\n\n    /**\n    * Enables sync mode for this EasyStar instance..\n    * if you're into that sort of thing.\n    **/\n    this.enableSync = function() {\n        syncEnabled = true;\n    };\n\n    /**\n    * Disables sync mode for this EasyStar instance.\n    **/\n    this.disableSync = function() {\n        syncEnabled = false;\n    };\n\n    /**\n     * Enable diagonal pathfinding.\n     */\n    this.enableDiagonals = function() {\n        diagonalsEnabled = true;\n    }\n\n    /**\n     * Disable diagonal pathfinding.\n     */\n    this.disableDiagonals = function() {\n        diagonalsEnabled = false;\n    }\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array} grid The collision grid that this EasyStar instance will read from.\n    * This should be a 2D Array of Numbers.\n    **/\n    this.setGrid = function(grid) {\n        collisionGrid = grid;\n\n        //Setup cost map\n        for (var y = 0; y < collisionGrid.length; y++) {\n            for (var x = 0; x < collisionGrid[0].length; x++) {\n                if (!costMap[collisionGrid[y][x]]) {\n                    costMap[collisionGrid[y][x]] = 1\n                }\n            }\n        }\n    };\n\n    /**\n    * Sets the tile cost for a particular tile type.\n    *\n    * @param {Number} The tile type to set the cost for.\n    * @param {Number} The multiplicative cost associated with the given tile.\n    **/\n    this.setTileCost = function(tileType, cost) {\n        costMap[tileType] = cost;\n    };\n\n    /**\n    * Sets the an additional cost for a particular point.\n    * Overrides the cost from setTileCost.\n    *\n    * @param {Number} x The x value of the point to cost.\n    * @param {Number} y The y value of the point to cost.\n    * @param {Number} The multiplicative cost associated with the given point.\n    **/\n    this.setAdditionalPointCost = function(x, y, cost) {\n        if (pointsToCost[y] === undefined) {\n            pointsToCost[y] = {};\n        }\n        pointsToCost[y][x] = cost;\n    };\n\n    /**\n    * Remove the additional cost for a particular point.\n    *\n    * @param {Number} x The x value of the point to stop costing.\n    * @param {Number} y The y value of the point to stop costing.\n    **/\n    this.removeAdditionalPointCost = function(x, y) {\n        if (pointsToCost[y] !== undefined) {\n            delete pointsToCost[y][x];\n        }\n    }\n\n    /**\n    * Remove all additional point costs.\n    **/\n    this.removeAllAdditionalPointCosts = function() {\n        pointsToCost = {};\n    }\n\n    /**\n    * Sets a directional condition on a tile\n    *\n    * @param {Number} x The x value of the point.\n    * @param {Number} y The y value of the point.\n    * @param {Array.<String>} allowedDirections A list of all the allowed directions that can access\n    * the tile.\n    **/\n    this.setDirectionalCondition = function(x, y, allowedDirections) {\n        if (directionalConditions[y] === undefined) {\n            directionalConditions[y] = {};\n        }\n        directionalConditions[y][x] = allowedDirections;\n    };\n\n    /**\n    * Remove all directional conditions\n    **/\n    this.removeAllDirectionalConditions = function() {\n        directionalConditions = {};\n    };\n\n    /**\n    * Sets the number of search iterations per calculation.\n    * A lower number provides a slower result, but more practical if you\n    * have a large tile-map and don't want to block your thread while\n    * finding a path.\n    *\n    * @param {Number} iterations The number of searches to prefrom per calculate() call.\n    **/\n    this.setIterationsPerCalculation = function(iterations) {\n        iterationsPerCalculation = iterations;\n    };\n\n    /**\n    * Avoid a particular point on the grid,\n    * regardless of whether or not it is an acceptable tile.\n    *\n    * @param {Number} x The x value of the point to avoid.\n    * @param {Number} y The y value of the point to avoid.\n    **/\n    this.avoidAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] === undefined) {\n            pointsToAvoid[y] = {};\n        }\n        pointsToAvoid[y][x] = 1;\n    };\n\n    /**\n    * Stop avoiding a particular point on the grid.\n    *\n    * @param {Number} x The x value of the point to stop avoiding.\n    * @param {Number} y The y value of the point to stop avoiding.\n    **/\n    this.stopAvoidingAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] !== undefined) {\n            delete pointsToAvoid[y][x];\n        }\n    };\n\n    /**\n    * Enables corner cutting in diagonal movement.\n    **/\n    this.enableCornerCutting = function() {\n        allowCornerCutting = true;\n    };\n\n    /**\n    * Disables corner cutting in diagonal movement.\n    **/\n    this.disableCornerCutting = function() {\n        allowCornerCutting = false;\n    };\n\n    /**\n    * Stop avoiding all additional points on the grid.\n    **/\n    this.stopAvoidingAllAdditionalPoints = function() {\n        pointsToAvoid = {};\n    };\n\n    /**\n    * Find a path.\n    *\n    * @param {Number} startX The X position of the starting point.\n    * @param {Number} startY The Y position of the starting point.\n    * @param {Number} endX The X position of the ending point.\n    * @param {Number} endY The Y position of the ending point.\n    * @param {Function} callback A function that is called when your path\n    * is found, or no path is found.\n    * @return {Number} A numeric, non-zero value which identifies the created instance. This value can be passed to cancelPath to cancel the path calculation.\n    *\n    **/\n    this.findPath = function(startX, startY, endX, endY, callback) {\n        // Wraps the callback for sync vs async logic\n        var callbackWrapper = function(result) {\n            if (syncEnabled) {\n                callback(result);\n            } else {\n                setTimeout(function() {\n                    callback(result);\n                });\n            }\n        }\n\n        // No acceptable tiles were set\n        if (acceptableTiles === undefined) {\n            throw new Error(\"You can't set a path without first calling setAcceptableTiles() on EasyStar.\");\n        }\n        // No grid was set\n        if (collisionGrid === undefined) {\n            throw new Error(\"You can't set a path without first calling setGrid() on EasyStar.\");\n        }\n\n        // Start or endpoint outside of scope.\n        if (startX < 0 || startY < 0 || endX < 0 || endY < 0 ||\n        startX > collisionGrid[0].length-1 || startY > collisionGrid.length-1 ||\n        endX > collisionGrid[0].length-1 || endY > collisionGrid.length-1) {\n            throw new Error(\"Your start or end point is outside the scope of your grid.\");\n        }\n\n        // Start and end are the same tile.\n        if (startX===endX && startY===endY) {\n            callbackWrapper([]);\n            return;\n        }\n\n        // End point is not an acceptable tile.\n        var endTile = collisionGrid[endY][endX];\n        var isAcceptable = false;\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (endTile === acceptableTiles[i]) {\n                isAcceptable = true;\n                break;\n            }\n        }\n\n        if (isAcceptable === false) {\n            callbackWrapper(null);\n            return;\n        }\n\n        // Create the instance\n        var instance = new Instance();\n        instance.openList = new Heap(function(nodeA, nodeB) {\n            return nodeA.bestGuessDistance() - nodeB.bestGuessDistance();\n        });\n        instance.isDoneCalculating = false;\n        instance.nodeHash = {};\n        instance.startX = startX;\n        instance.startY = startY;\n        instance.endX = endX;\n        instance.endY = endY;\n        instance.callback = callbackWrapper;\n\n        instance.openList.push(coordinateToNode(instance, instance.startX,\n            instance.startY, null, STRAIGHT_COST));\n\n        var instanceId = nextInstanceId ++;\n        instances[instanceId] = instance;\n        instanceQueue.push(instanceId);\n        return instanceId;\n    };\n\n    /**\n     * Cancel a path calculation.\n     *\n     * @param {Number} instanceId The instance ID of the path being calculated\n     * @return {Boolean} True if an instance was found and cancelled.\n     *\n     **/\n    this.cancelPath = function(instanceId) {\n        if (instanceId in instances) {\n            delete instances[instanceId];\n            // No need to remove it from instanceQueue\n            return true;\n        }\n        return false;\n    };\n\n    /**\n    * This method steps through the A* Algorithm in an attempt to\n    * find your path(s). It will search 4-8 tiles (depending on diagonals) for every calculation.\n    * You can change the number of calculations done in a call by using\n    * easystar.setIteratonsPerCalculation().\n    **/\n    this.calculate = function() {\n        if (instanceQueue.length === 0 || collisionGrid === undefined || acceptableTiles === undefined) {\n            return;\n        }\n        for (iterationsSoFar = 0; iterationsSoFar < iterationsPerCalculation; iterationsSoFar++) {\n            if (instanceQueue.length === 0) {\n                return;\n            }\n\n            if (syncEnabled) {\n                // If this is a sync instance, we want to make sure that it calculates synchronously.\n                iterationsSoFar = 0;\n            }\n\n            var instanceId = instanceQueue[0];\n            var instance = instances[instanceId];\n            if (typeof instance == 'undefined') {\n                // This instance was cancelled\n                instanceQueue.shift();\n                continue;\n            }\n\n            // Couldn't find a path.\n            if (instance.openList.size() === 0) {\n                instance.callback(null);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            var searchNode = instance.openList.pop();\n\n            // Handles the case where we have found the destination\n            if (instance.endX === searchNode.x && instance.endY === searchNode.y) {\n                var path = [];\n                path.push({x: searchNode.x, y: searchNode.y});\n                var parent = searchNode.parent;\n                while (parent!=null) {\n                    path.push({x: parent.x, y:parent.y});\n                    parent = parent.parent;\n                }\n                path.reverse();\n                var ip = path;\n                instance.callback(ip);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            searchNode.list = CLOSED_LIST;\n\n            if (searchNode.y > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    0, -1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y-1));\n            }\n            if (searchNode.x < collisionGrid[0].length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    1, 0, STRAIGHT_COST * getTileCost(searchNode.x+1, searchNode.y));\n            }\n            if (searchNode.y < collisionGrid.length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    0, 1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y+1));\n            }\n            if (searchNode.x > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    -1, 0, STRAIGHT_COST * getTileCost(searchNode.x-1, searchNode.y));\n            }\n            if (diagonalsEnabled) {\n                if (searchNode.x > 0 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, -1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, 1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y+1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, -1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x > 0 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, 1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y+1));\n                    }\n                }\n            }\n\n        }\n    };\n\n    // Private methods follow\n    var checkAdjacentNode = function(instance, searchNode, x, y, cost) {\n        var adjacentCoordinateX = searchNode.x+x;\n        var adjacentCoordinateY = searchNode.y+y;\n\n        if ((pointsToAvoid[adjacentCoordinateY] === undefined ||\n             pointsToAvoid[adjacentCoordinateY][adjacentCoordinateX] === undefined) &&\n            isTileWalkable(collisionGrid, acceptableTiles, adjacentCoordinateX, adjacentCoordinateY, searchNode)) {\n            var node = coordinateToNode(instance, adjacentCoordinateX,\n                adjacentCoordinateY, searchNode, cost);\n\n            if (node.list === undefined) {\n                node.list = OPEN_LIST;\n                instance.openList.push(node);\n            } else if (searchNode.costSoFar + cost < node.costSoFar) {\n                node.costSoFar = searchNode.costSoFar + cost;\n                node.parent = searchNode;\n                instance.openList.updateItem(node);\n            }\n        }\n    };\n\n    // Helpers\n    var isTileWalkable = function(collisionGrid, acceptableTiles, x, y, sourceNode) {\n        var directionalCondition = directionalConditions[y] && directionalConditions[y][x];\n        if (directionalCondition) {\n            var direction = calculateDirection(sourceNode.x - x, sourceNode.y - y)\n            var directionIncluded = function () {\n                for (var i = 0; i < directionalCondition.length; i++) {\n                    if (directionalCondition[i] === direction) return true\n                }\n                return false\n            }\n            if (!directionIncluded()) return false\n        }\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (collisionGrid[y][x] === acceptableTiles[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * -1, -1 | 0, -1  | 1, -1\n     * -1,  0 | SOURCE | 1,  0\n     * -1,  1 | 0,  1  | 1,  1\n     */\n    var calculateDirection = function (diffX, diffY) {\n        if (diffX === 0 && diffY === -1) return EasyStar.TOP\n        else if (diffX === 1 && diffY === -1) return EasyStar.TOP_RIGHT\n        else if (diffX === 1 && diffY === 0) return EasyStar.RIGHT\n        else if (diffX === 1 && diffY === 1) return EasyStar.BOTTOM_RIGHT\n        else if (diffX === 0 && diffY === 1) return EasyStar.BOTTOM\n        else if (diffX === -1 && diffY === 1) return EasyStar.BOTTOM_LEFT\n        else if (diffX === -1 && diffY === 0) return EasyStar.LEFT\n        else if (diffX === -1 && diffY === -1) return EasyStar.TOP_LEFT\n        throw new Error('These differences are not valid: ' + diffX + ', ' + diffY)\n    };\n\n    var getTileCost = function(x, y) {\n        return (pointsToCost[y] && pointsToCost[y][x]) || costMap[collisionGrid[y][x]]\n    };\n\n    var coordinateToNode = function(instance, x, y, parent, cost) {\n        if (instance.nodeHash[y] !== undefined) {\n            if (instance.nodeHash[y][x] !== undefined) {\n                return instance.nodeHash[y][x];\n            }\n        } else {\n            instance.nodeHash[y] = {};\n        }\n        var simpleDistanceToTarget = getDistance(x, y, instance.endX, instance.endY);\n        if (parent!==null) {\n            var costSoFar = parent.costSoFar + cost;\n        } else {\n            costSoFar = 0;\n        }\n        var node = new Node(parent,x,y,costSoFar,simpleDistanceToTarget);\n        instance.nodeHash[y][x] = node;\n        return node;\n    };\n\n    var getDistance = function(x1,y1,x2,y2) {\n        if (diagonalsEnabled) {\n            // Octile distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            if (dx < dy) {\n                return DIAGONAL_COST * dx + dy;\n            } else {\n                return DIAGONAL_COST * dy + dx;\n            }\n        } else {\n            // Manhattan distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            return (dx + dy);\n        }\n    };\n}\n\nEasyStar.TOP = 'TOP'\nEasyStar.TOP_RIGHT = 'TOP_RIGHT'\nEasyStar.RIGHT = 'RIGHT'\nEasyStar.BOTTOM_RIGHT = 'BOTTOM_RIGHT'\nEasyStar.BOTTOM = 'BOTTOM'\nEasyStar.BOTTOM_LEFT = 'BOTTOM_LEFT'\nEasyStar.LEFT = 'LEFT'\nEasyStar.TOP_LEFT = 'TOP_LEFT'\n","import { Enemy } from './entities/enemies';\r\nimport { PowerUp } from './entities/powerup';\r\nimport { ControlHandler } from './controller';\r\nimport { Player } from './entities/player';\r\nimport { Config } from './config';\r\nimport { Camera } from './camera';\r\nimport { Map } from './maps';\r\nimport {BulletHandler} from './entities/bullet';\r\nimport { Particelle } from './entities/particelle';\r\nimport { Blood } from './entities/blood';\r\nimport { Waypoints } from './entities/waypoints';\r\n\r\nimport * as EasyStar from 'easystarjs'\r\n\r\nwindow.onload = function () {\r\n    let app = new Game();\r\n    app.loadMenuScreen(app);\r\n};\r\n\r\nexport default class Game {\r\n\r\n    // CANVAS\r\n    canvas:            HTMLCanvasElement;\r\n    ctx:               CanvasRenderingContext2D;\r\n\r\n    lastRender:number;\r\n    fps:number;\r\n\r\n    // GAME ENTITIES\r\n    player:     Player;\r\n    enemy:      Enemy;\r\n    bullet:     BulletHandler;\r\n    camera:     Camera;\r\n    control:    ControlHandler;\r\n    powerup:    PowerUp;\r\n    waypoints:  Waypoints;\r\n    particelle: Particelle;\r\n    blood:      Blood;\r\n    currentMap: Map;\r\n    c:          Config;\r\n    state:             string;\r\n    timeleft:          number;\r\n\r\n    // GAME PARAMETERS\r\n    start:         boolean;     // flags that you want the countdown to start\r\n    stopTime:      number;      // used to hold the stop time\r\n    stop:          boolean;     // flag to indicate that stop time has been reached\r\n    timeTillStop:  number;      // holds the display time\r\n    killsToWin:    number;\r\n    matchDuration: number;\r\n    numberOfBots:  number;\r\n    gameType:      string;           // TODO: sarà in seguito anche Team Deathmatch, Capture the flag, Skirmish\r\n    data:          any;\r\n\r\n    actors:        any[];\r\n\r\n    fragMessage:   string;\r\n    durationfragMessage:   number;\r\n\r\n    // A* PATHFINDING\r\n    easystar:      any;\r\n\r\n    // UI\r\n    fontFamily:        string;\r\n    paused:boolean = false;\r\n    debug:boolean = false;\r\n\r\n    constructor() {\r\n        this.canvas        = <HTMLCanvasElement>document.getElementById('canvas');\r\n        this.canvas.height = 600; // window.innerHeight\r\n        this.canvas.width  = 800; // window.innerWidth\r\n        this.ctx           = this.canvas.getContext(\"2d\");\r\n        this.player        = new Player();  // PLAYER\r\n        this.enemy         = new Enemy();    // ENEMY\r\n        this.bullet        = new BulletHandler();\r\n        this.camera        = new Camera();\r\n        this.control       = new ControlHandler(this);\r\n        this.currentMap    = new Map();\r\n        this.particelle    = new Particelle();\r\n        this.powerup       = new PowerUp();\r\n        this.waypoints     = new Waypoints();\r\n        this.blood         = new Blood();\r\n        this.state         = 'loading';\r\n    }\r\n    \r\n    // fa partire il gameloop\r\n    startGame(gametype:string='deathmatch') {\r\n        this.c                   = new Config();\r\n        this.canvas.height       = this.c.CANVAS_HEIGHT; // window.innerHeight\r\n        this.canvas.width        = this.c.CANVAS_WIDTH; // window.innerWidth\r\n        this.state               = 'game';\r\n        this.start               = true;      // flags that you want the countdown to start\r\n        this.lastRender          = 0;         // ultimo timestamp\r\n        this.fps                 = 0;\r\n        this.stopTime            = 0;         // used to hold the stop time\r\n        this.stop                = false;     // flag to indicate that stop time has been reached\r\n        this.timeTillStop        = 0;         // holds the display time\r\n        this.killsToWin          = this.c.GAME_KILLS_TO_WIN;\r\n        this.matchDuration       = this.c.GAME_MATCH_DURATION;\r\n        this.numberOfBots        = this.c.GAME_BOTS_PER_MATCH;\r\n        this.gameType            = gametype;\r\n        this.canvas.style.cursor = 'crosshair';\r\n        this.fontFamily          = this.c.FONT_FAMILY;\r\n        this.actors              = [];\r\n        this.easystar            = {};\r\n\r\n        this.fragMessage         ='';\r\n        this.durationfragMessage =0;\r\n        \r\n        \r\n        // bots names\r\n        let botsArray = Array(this.numberOfBots).fill(null).map((e,i)=> i);\r\n        \r\n        // init entities\r\n        this.currentMap.init(this);\r\n        this.player.init(this);\r\n        this.camera.init(0, 0, this.c.CANVAS_WIDTH, this.c.CANVAS_HEIGHT, this);\r\n        this.enemy.init(this);\r\n        this.bullet.init(this);\r\n        this.blood.init(this);\r\n        this.particelle.init(this);\r\n        this.powerup.init(this);\r\n        this.waypoints.init(this);\r\n\r\n        // loading spawnPoint + powerups + weapons\r\n        this.data = this.currentMap.loadSpawnPointsAndPowerUps();\r\n\r\n         // POWERUP & WEAPONS\r\n         this.data.powerup\r\n         .map((e:any,i:number)=>{\r\n             e.index=i;\r\n            return e;})  // si mette un indice\r\n         .forEach((e:any, index:number) => {\r\n            this.powerup.create(e.x, e.y, e.type, index); \r\n        });\r\n\r\n         // waypoint\r\n         this.data.waypoints\r\n         .map((e:any,i:number)=>{\r\n             e.index=i;\r\n            return e;})  // si mette un indice\r\n         .forEach((e:any, index:number) => {\r\n            this.waypoints.create(e.x, e.y, index); \r\n        });\r\n\r\n        // si inizializza il player\r\n        this.player.createPlayer();      \r\n        this.actors[0]= this.player;\r\n        \r\n        // si crea i bots\r\n        botsArray.forEach((elem:any, index:number) => {\r\n            let e = this.data.spawn[index];\r\n            let bot = this.enemy.create(e.x,e.y, index, this.defineTeams(index)); // si crea un nemico\r\n            this.actors[this.actors.length]=bot;\r\n        });\r\n\r\n        this.waypoints.linkToActors();\r\n\r\n        this.easystar = new EasyStar.js();\r\n        this.easystar.setGrid(this.currentMap.map);\r\n        // Get the walkable tile indexes\r\n        this.easystar.setAcceptableTiles([0, 2, 10, 11, 12, 13, 14, 15, 16, 23, 24, 25, 27, 29, 34, 35, 37, 39, 40]);\r\n        this.easystar.enableDiagonals();\r\n        this.easystar.enableCornerCutting();\r\n\r\n        requestAnimationFrame(this.gameLoop.bind(this));\r\n    }\r\n\r\n    defineTeams(index:number){\r\n        if(this.gameType== 'deathmatch'){   // tutti i bot hanno un team diverso...\r\n            return  `team${index+2}`;\r\n        } else {    // per teamDeathMatch e CTF\r\n            if(index<Math.floor(this.c.GAME_BOTS_PER_MATCH/2)+1){\r\n                return  `team2`;\r\n            }else{\r\n                return  `team1`;\r\n            }\r\n        }\r\n    }\r\n\r\n    private gameLoop(timestamp:number): void {\r\n\r\n        this.canvas.style.cursor='crosshair';\r\n        \r\n        let dt = timestamp - this.lastRender;\r\n        this.fps = Math.floor(1000/dt);\r\n\r\n        if(this.start){                                     // do we need to start the timer\r\n            this.stopTime = timestamp + this.matchDuration; // yes the set the stoptime\r\n            this.start = false;                             // clear the start flag\r\n        }else{                                              // waiting for stop\r\n            if(timestamp >= this.stopTime){                 // has stop time been reached?\r\n                this.stop = true;                           // yes the flag to stop\r\n            }\r\n        }\r\n        this.timeTillStop = Math.floor(this.stopTime - timestamp)/1000;      // for display of time till stop\r\n\r\n        if (this.state != 'game') {\r\n            return\r\n        }\r\n\r\n        if(this.fragMessage){\r\n            this.durationfragMessage+= dt;\r\n        }\r\n\r\n        if(this.durationfragMessage> 1500){\r\n            this.fragMessage= '';\r\n            this.durationfragMessage = 0;\r\n        }\r\n\r\n        for (let i = 0; i < this.enemy.list.length; i++) {\r\n            const bot = this.enemy.list[i];\r\n            if (this.player.kills == this.killsToWin || bot.kills == this.killsToWin) {\r\n                this.loadStatsScreen(this);\r\n                return; \r\n            }\r\n        }\r\n\r\n        if(!this.paused){\r\n            this.updateAll(dt, timestamp);\r\n            this.renderAll();\r\n        }\r\n        \r\n        this.lastRender = timestamp;\r\n      \r\n        if (!this.stop) {\r\n            requestAnimationFrame(this.gameLoop.bind(this));\r\n        } else {\r\n            this.loadStatsScreen(this);\r\n            return;\r\n        }\r\n    }\r\n\r\n    updateAll(dt:number, timestamp:number) {\r\n        this.player.update(dt, timestamp);\r\n        this.enemy.update(dt, timestamp);\r\n        this.camera.update(dt, timestamp);\r\n        this.bullet.update(dt, timestamp); \r\n        this.powerup.update(dt, timestamp);\r\n        this.waypoints.update(dt, timestamp);    // waypoints\r\n        this.particelle.update(dt, timestamp);\r\n        this.blood.update(dt, timestamp);\r\n        // particles:esplosioni\r\n    }\r\n\r\n    renderAll(): void {\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);  // svuota il canvas\r\n        this.currentMap.render();\r\n        this.player.render();\r\n        this.enemy.render();\r\n        this.bullet.render(); \r\n        this.powerup.render();\r\n        this.waypoints.render();    // waypoints\r\n        this.particelle.render();\r\n        this.blood.render();\r\n        // particles:esplosioni\r\n\r\n        this.renderHUD();   // HUD\r\n    }\r\n\r\n    countDown(){\r\n        let minutes, seconds;\r\n        minutes = Math.floor(this.timeTillStop / 60);\r\n        seconds = Math.floor(this.timeTillStop % 60);\r\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n        return  `${minutes}:${seconds}`;\r\n    }\r\n\r\n    private renderHUD() {\r\n        this.ctx.fillStyle = this.c.HUD_BACKGROUND;\r\n        this.ctx.fillRect(0, 0, this.c.CANVAS_WIDTH, this.c.TILE_SIZE);\r\n        this.ctx.textAlign = 'LEFT';\r\n        this.ctx.font = 'bold 14px/1 Arial';\r\n        this.ctx.fillStyle = '#565454';\r\n        this.ctx.fillText('HP ', 5, this.c.TILE_SIZE / 2);\r\n        this.ctx.fillText('AP ', 85, this.c.TILE_SIZE / 2);\r\n        this.ctx.fillText('Kills ', 165, this.c.TILE_SIZE / 2);\r\n        this.ctx.fillText(this.player.currentWeapon.name, 245, this.c.TILE_SIZE / 2);\r\n        this.ctx.fillText('TIME ', 600, this.c.TILE_SIZE / 2);\r\n        this.ctx.fillText('FPS ', 710, this.c.TILE_SIZE / 2);\r\n        if (this.player.godMode) {\r\n            this.ctx.fillText('god', 770, this.c.TILE_SIZE / 2);\r\n        }\r\n        this.ctx.font = 'bold 14px/1 Arial';\r\n        this.ctx.fillStyle = 'yellow';\r\n        this.ctx.fillText(this.player.hp.toString(), 30, this.c.TILE_SIZE / 2);\r\n        this.ctx.fillText(this.player.ap.toString(), 110, this.c.TILE_SIZE / 2);\r\n        this.ctx.fillText(this.player.kills.toString(), 200, this.c.TILE_SIZE / 2);\r\n        this.ctx.fillText(this.player.currentWeapon.shotNumber.toString(), 310, this.c.TILE_SIZE / 2);\r\n        this.ctx.fillText(this.countDown(), 640, this.c.TILE_SIZE / 2);\r\n        this.ctx.fillText(this.fps.toString(), 750, this.c.TILE_SIZE / 2);\r\n        \r\n        // RESPAWN MESSAGE\r\n        if (!this.player.alive) {\r\n            this.ctx.fillStyle = '#565454';\r\n            this.ctx.font = 'bold 28px/1 Arial';\r\n            this.ctx.textAlign = 'center';\r\n            this.ctx.fillText(`Respawn in ${Math.ceil((this.c.GAME_RESPAWN_TIME - this.player.respawnTime) / 1000).toString()}`, 400, 120);\r\n        }\r\n\r\n        // FRAG MESSAGE\r\n        if (this.fragMessage) {\r\n            this.ctx.fillStyle = '#565454';\r\n            this.ctx.font = 'bold 20px/1 Arial';\r\n            this.ctx.textAlign = 'center';\r\n            this.ctx.fillText(this.fragMessage, 400, 120);\r\n        }\r\n    }\r\n\r\n    textONCanvas(context, text, x, y, font, style, align?, baseline?) {\r\n        context.font = typeof font === 'undefined' ? 'normal 16px/1 Arial' : font;\r\n        context.fillStyle = typeof style === 'undefined' ? '#000000' : style;\r\n        context.textAlign = typeof align === 'undefined' ? 'center' : align;\r\n        context.textBaseline = typeof baseline === 'undefined' ? 'middle' : baseline;\r\n        context.fillText(text, x, y)\r\n    }\r\n\r\n    loadMenuScreen(main: any) {\r\n        \r\n        let gameType:string;\r\n\r\n        main.canvas.addEventListener('click', (e:any) => {\r\n            const rect = this.canvas.getBoundingClientRect();\r\n            const pos = {\r\n              x: e.clientX - rect.left,\r\n              y: e.clientY - rect.top\r\n            };\r\n            if(deathBtn.contains(pos.x,pos.y)){\r\n                gameType='deathmatch'\r\n            }\r\n            if(teamBtn.contains(pos.x,pos.y)){\r\n                gameType= 'team';\r\n            }\r\n            if(playBtn.contains(pos.x,pos.y)){\r\n                this.startGame(gameType);\r\n            }\r\n        })\r\n\r\n        main.canvas.style.cursor='pointer';\r\n        main.state = 'menuScreen';\r\n        main.control.mouseLeft = false;\r\n        main.ctx.clearRect(0, 0, main.canvas.width, main.canvas.height);\r\n        var hW = main.canvas.width * 0.5;\r\n        var hH = main.canvas.height * 0.5;\r\n        var dark = 'rgba(0,0,0)';\r\n        var medium = 'rgba(0,0,0)';\r\n        var light = 'rgba(0,0,0)';\r\n        this.textONCanvas(main.ctx, 'Arena Shooter 2D', hW, hH - 100, 'normal 36px/1 ' + main.fontFamily, light, );\r\n        this.textONCanvas(main.ctx, 'Use \"WASD\" to move and \"Left Click\" to shoot.', hW, hH - 30, 'normal 15px/1 ' + main.fontFamily, medium);\r\n        this.textONCanvas(main.ctx, 'Use mouse wheel to change weapons.', hW, hH - 10, 'normal 15px/1 ' + main.fontFamily, medium);\r\n        this.textONCanvas(main.ctx, 'P or ESC for pause screen (i for debug, g for godmode, b to cycle camera).', hW, hH + 10, 'normal 15px/1 ' + main.fontFamily, medium);\r\n        // this.textONCanvas(main.ctx, 'Click to Start', hW, hH + 80, 'normal 18px/1 ' + main.fontFamily, dark);\r\n        \r\n        this.textONCanvas(main.ctx, 'L.Corbella © 2018', 9, main.canvas.height - 14, 'normal 12px/1 ' + main.fontFamily, light, 'left');\r\n        \r\n        let deathBtn = new MyBTN(150,350,200,100);\r\n        deathBtn.draw(main.ctx);\r\n        this.textONCanvas(main.ctx, 'DeathMatch', 250, 375, 'normal 15px/1 ' + main.fontFamily, medium);\r\n        \r\n        let teamBtn = new MyBTN(450,350,200,100);\r\n        teamBtn.draw(main.ctx);\r\n        this.textONCanvas(main.ctx, 'Team DeathMatch', 550, 375, 'normal 15px/1 ' + main.fontFamily, medium);\r\n        let playBtn = new MyBTN(300,475,200,100);\r\n        playBtn.draw(main.ctx);\r\n     \r\n        this.textONCanvas(main.ctx, 'Click to start', 400, 525, 'normal 15px/1 ' + main.fontFamily, medium);\r\n    }\r\n\r\n    loadStatsScreen(main: any) {\r\n        main.canvas.style.cursor='pointer';\r\n        main.state = 'statsScreen';\r\n        main.control.mouseLeft = false;\r\n        main.ctx.clearRect(0, 0, main.canvas.width, main.canvas.height);\r\n        var hW = main.canvas.width * 0.5;\r\n        var hH = main.canvas.height * 0.5;\r\n        var dark = 'rgba(0,0,0)';\r\n        var medium = 'rgba(0,0,0)';\r\n        var light = 'rgba(0,0,0)';\r\n        this.textONCanvas(main.ctx, 'Corbe Shooter 2D',hW, hH - 150, 'normal 42px/1 ' + main.fontFamily, light);\r\n        this.textONCanvas(main.ctx, 'Partita completata!', hW, hH - 70, 'normal 22px/1 ' + main.fontFamily, dark);\r\n        // this.textONCanvas(main.ctx, `${main.player.name} - ${main.player.kills} - ${main.player.numberOfDeaths}`, hW, hH - 30, 'normal 16px/1 ' + main.fontFamily, medium);\r\n        // for (let i = 0; i < this.enemy.list.length; i++) {\r\n        //     const bot = this.enemy.list[i];\r\n        //     this.textONCanvas(main.ctx, `${bot.name} - ${bot.kills} - ${bot.numberOfDeaths}`, hW, hH - 30 +(20*(i+1)), 'normal 16px/1 ' + main.fontFamily, medium);\r\n        // }\r\n        this.actors = this.actors.sort((obj1, obj2) =>obj2.kills - obj1.kills);\r\n        for (let i = 0; i < this.actors.length; i++) {\r\n            const actor = this.actors[i];\r\n            this.textONCanvas(main.ctx, `${actor.name} - ${actor.kills} - ${actor.numberOfDeaths}`, hW, hH - 30 +(20*(i+1)), 'normal 16px/1 ' + main.fontFamily, medium);\r\n        }\r\n        this.textONCanvas(main.ctx, 'Click to Restart', hW, main.canvas.height - 120, 'normal 18px/1 ' + main.fontFamily, dark);\r\n        this.textONCanvas(main.ctx, 'L.Corbella © 2018', 9, main.canvas.height - 14, 'normal 12px/1 ' + main.fontFamily, light, 'left')\r\n    }\r\n    \r\n    // screen di pausa\r\n    loadPauseScreen(main: any) {\r\n        main.canvas.style.cursor='pointer';\r\n        main.paused = true;\r\n        main.control.mouseDown = false;\r\n        main.ctx.fillStyle = 'rgba(255,255,255,0.5)';\r\n        main.ctx.fillRect(0, 0, main.canvas.width, main.canvas.height);\r\n        var hW = main.canvas.width * 0.5;\r\n        var hH = main.canvas.height * 0.5;\r\n        var dark = 'rgba(0,0,0,0.9)';\r\n        var medium = 'rgba(0,0,0,0.5)';\r\n        var light = 'rgba(0,0,0,0.3)';\r\n        this.textONCanvas(main.ctx, 'Paused', hW, hH - 60, 'normal 22px/1 ' + main.fontFamily, dark);\r\n        // this.textONCanvas(main.ctx, `${main.player.name} - ${main.player.kills} - ${main.player.numberOfDeaths}`, hW, hH - 30, 'normal 16px/1 ' + main.fontFamily, medium);\r\n        // for (let i = 0; i < this.enemy.list.length; i++) {\r\n        //     const bot = this.enemy.list[i];\r\n        //     this.textONCanvas(main.ctx, `${bot.name} - ${bot.kills} - ${bot.numberOfDeaths}`, hW, hH - 30 +(20*(i+1)), 'normal 16px/1 ' + main.fontFamily, medium);\r\n        // }\r\n        this.actors = this.actors.sort((obj1, obj2) =>obj2.kills - obj1.kills);\r\n        for (let i = 0; i < this.actors.length; i++) {\r\n            const actor = this.actors[i];\r\n            this.textONCanvas(main.ctx, `${actor.name} - ${actor.kills} - ${actor.numberOfDeaths}`, hW, hH - 30 +(20*(i+1)), 'normal 16px/1 ' + main.fontFamily, medium);\r\n        }\r\n        this.textONCanvas(main.ctx, 'Click to Continue', hW, hH + 150   , 'normal 17px/1 ' + main.fontFamily, dark)\r\n    }\r\n}\r\n\r\nexport class MyBTN  {\r\n\r\n    x:      number;\r\n    y:      number;\r\n    width:  number;\r\n    height: number;\r\n\r\n\r\n    constructor(x:number, y:number, w:number, h:number){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = w;\r\n        this.height = h;\r\n    }\r\n\r\n    contains(x:number, y:number) {\r\n        return this.x <= x && x <= this.x + this.width &&\r\n               this.y <= y && y <= this.y + this.height;\r\n    }\r\n\r\n    draw(ctx:any) {\r\n        ctx.rect(this.x, this.y, this.width, this.height);\r\n        ctx.stroke();\r\n    }\r\n}"]}